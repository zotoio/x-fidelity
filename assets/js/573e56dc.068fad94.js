"use strict";(self.webpackChunkx_fidelity_website=self.webpackChunkx_fidelity_website||[]).push([[4601],{2536:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"ci-cd/github-actions","title":"GitHub Actions Integration","description":"This guide shows how to integrate x-fidelity into your GitHub Actions workflows.","source":"@site/docs/ci-cd/github-actions.md","sourceDirName":"ci-cd","slug":"/ci-cd/github-actions","permalink":"/x-fidelity/docs/ci-cd/github-actions","draft":false,"unlisted":false,"editUrl":"https://github.com/zotoio/x-fidelity/edit/main/website/docs/ci-cd/github-actions.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docs","previous":{"title":"CI/CD Integration Overview","permalink":"/x-fidelity/docs/ci-cd/overview"},"next":{"title":"GitLab CI Integration","permalink":"/x-fidelity/docs/ci-cd/gitlab-ci"}}');var t=i(4848),r=i(8453);const c={sidebar_position:2},l="GitHub Actions Integration",o={},a=[{value:"Basic Workflow",id:"basic-workflow",level:2},{value:"Advanced Configuration",id:"advanced-configuration",level:2},{value:"With OpenAI Integration",id:"with-openai-integration",level:3},{value:"With Local Config",id:"with-local-config",level:3},{value:"With Custom Archetype",id:"with-custom-archetype",level:3},{value:"GitHub Actions Specific Features",id:"github-actions-specific-features",level:2},{value:"Caching Dependencies",id:"caching-dependencies",level:3},{value:"Matrix Testing",id:"matrix-testing",level:3},{value:"Pull Request Comments",id:"pull-request-comments",level:3},{value:"Environment Variables",id:"environment-variables",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Example Projects",id:"example-projects",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"github-actions-integration",children:"GitHub Actions Integration"})}),"\n",(0,t.jsx)(n.p,{children:"This guide shows how to integrate x-fidelity into your GitHub Actions workflows."}),"\n",(0,t.jsx)(n.h2,{id:"basic-workflow",children:"Basic Workflow"}),"\n",(0,t.jsxs)(n.p,{children:["Create ",(0,t.jsx)(n.code,{children:".github/workflows/x-fidelity.yml"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"name: x-fidelity\n\non:\n  push:\n    branches: [ main ]\n  pull_request:\n    branches: [ main ]\n\njobs:\n  check:\n    runs-on: ubuntu-latest\n    \n    steps:\n    - uses: actions/checkout@v3\n    \n    - name: Setup Node.js\n      uses: actions/setup-node@v3\n      with:\n        node-version: '18'\n        cache: 'yarn'\n    \n    - name: Install x-fidelity\n      run: |\n        yarn global add x-fidelity\n        echo \"$(yarn global bin)\" >> $GITHUB_PATH\n    \n    - name: Run x-fidelity\n      env:\n        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}\n        XFI_SHARED_SECRET: ${{ secrets.XFI_SHARED_SECRET }}\n      run: xfidelity . --configServer https://config-server.example.com\n"})}),"\n",(0,t.jsx)(n.h2,{id:"advanced-configuration",children:"Advanced Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"with-openai-integration",children:"With OpenAI Integration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"- name: Run x-fidelity with OpenAI\n  env:\n    OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}\n    OPENAI_MODEL: 'gpt-4'\n  run: xfidelity . -o true\n"})}),"\n",(0,t.jsx)(n.h3,{id:"with-local-config",children:"With Local Config"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"- name: Run x-fidelity with local config\n  run: xfidelity . --localConfigPath ./config\n"})}),"\n",(0,t.jsx)(n.h3,{id:"with-custom-archetype",children:"With Custom Archetype"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"- name: Run x-fidelity with custom archetype\n  run: xfidelity . --archetype java-microservice\n"})}),"\n",(0,t.jsx)(n.h2,{id:"github-actions-specific-features",children:"GitHub Actions Specific Features"}),"\n",(0,t.jsx)(n.h3,{id:"caching-dependencies",children:"Caching Dependencies"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"- uses: actions/cache@v3\n  with:\n    path: |\n      **/node_modules\n      $(yarn cache dir)\n    key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\n    restore-keys: |\n      ${{ runner.os }}-yarn-\n"})}),"\n",(0,t.jsx)(n.h3,{id:"matrix-testing",children:"Matrix Testing"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"jobs:\n  check:\n    strategy:\n      matrix:\n        archetype: [node-fullstack, java-microservice]\n    \n    steps:\n    - name: Run x-fidelity\n      run: xfidelity . --archetype ${{ matrix.archetype }}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"pull-request-comments",children:"Pull Request Comments"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"- name: Comment PR\n  if: github.event_name == 'pull_request'\n  uses: actions/github-script@v6\n  with:\n    script: |\n      const fs = require('fs');\n      const results = JSON.parse(fs.readFileSync('results.json', 'utf8'));\n      github.rest.issues.createComment({\n        issue_number: context.issue.number,\n        owner: context.repo.owner,\n        repo: context.repo.repo,\n        body: `x-fidelity results:\\n\\`\\`\\`\\n${JSON.stringify(results, null, 2)}\\n\\`\\`\\``\n      });\n"})}),"\n",(0,t.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,t.jsx)(n.p,{children:"Set these in your repository secrets:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"OPENAI_API_KEY"}),": For OpenAI integration"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"XFI_SHARED_SECRET"}),": For config server authentication"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"CONFIG_SERVER_URL"}),": Your config server URL"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Secrets Management"}),": Use GitHub Secrets for sensitive data"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Caching"}),": Implement proper caching strategy"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Versioning"}),": Pin action and dependency versions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error Handling"}),": Add proper error handling"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Notifications"}),": Configure notifications for failures"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"example-projects",children:"Example Projects"}),"\n",(0,t.jsx)(n.p,{children:"Check out these example repositories:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/example/x-fidelity-node",children:"x-fidelity-node-example"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/example/x-fidelity-java",children:"x-fidelity-java-example"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(n.p,{children:"Common issues and solutions:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Authentication Failures"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Check secret configuration"}),"\n",(0,t.jsx)(n.li,{children:"Verify environment variables"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Timeout Issues"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Increase GitHub Actions timeout"}),"\n",(0,t.jsx)(n.li,{children:"Optimize analysis scope"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Cache Problems"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Clear cache"}),"\n",(0,t.jsx)(n.li,{children:"Update cache key"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>l});var s=i(6540);const t={},r=s.createContext(t);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);