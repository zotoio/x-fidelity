"use strict";(self.webpackChunkx_fidelity_website=self.webpackChunkx_fidelity_website||[]).push([[4592],{6769:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>x,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"vscode-extension/command-delegation","title":"Command Delegation System","description":"X-Fidelity\'s VSCode extension includes a powerful command delegation system that allows other VSCode extensions to provide enhanced implementations for issue explanation, fixing, and batch operations.","source":"@site/docs/vscode-extension/command-delegation.md","sourceDirName":"vscode-extension","slug":"/vscode-extension/command-delegation","permalink":"/x-fidelity/docs/vscode-extension/command-delegation","draft":false,"unlisted":false,"editUrl":"https://github.com/zotoio/x-fidelity/edit/main/website/docs/vscode-extension/command-delegation.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5}}');var t=i(4848),o=i(8453);const r={sidebar_position:5},l="Command Delegation System",d={},a=[{value:"Overview",id:"overview",level:2},{value:"How It Works",id:"how-it-works",level:2},{value:"Architecture",id:"architecture",level:3},{value:"Command Types",id:"command-types",level:3},{value:"Extension Points",id:"extension-points",level:2},{value:"Issue Explainer Extension Point",id:"issue-explainer-extension-point",level:3},{value:"Issue Fixer Extension Point",id:"issue-fixer-extension-point",level:3},{value:"Command Context",id:"command-context",level:2},{value:"Issue Context",id:"issue-context",level:3},{value:"Group Context",id:"group-context",level:3},{value:"Configuration",id:"configuration",level:2},{value:"User Configuration",id:"user-configuration",level:3},{value:"Configuration UI",id:"configuration-ui",level:3},{value:"Implementation Examples",id:"implementation-examples",level:2},{value:"Basic Issue Explainer",id:"basic-issue-explainer",level:3},{value:"Advanced Issue Fixer with AI",id:"advanced-issue-fixer-with-ai",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"For Extension Developers",id:"for-extension-developers",level:3},{value:"For Users",id:"for-users",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Debug Information",id:"debug-information",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Future Enhancements",id:"future-enhancements",level:2},{value:"Contributing",id:"contributing",level:2},{value:"Example Extensions",id:"example-extensions",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"command-delegation-system",children:"Command Delegation System"})}),"\n",(0,t.jsx)(n.p,{children:"X-Fidelity's VSCode extension includes a powerful command delegation system that allows other VSCode extensions to provide enhanced implementations for issue explanation, fixing, and batch operations."}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"The command delegation system enables:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Extensibility"}),": Other extensions can provide specialized implementations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"User Choice"}),": Users can configure which extension handles each command type"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fallback"}),": Default implementations when no external extension is configured"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Discovery"}),": Automatic detection of compatible extensions"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,t.jsx)(n.h3,{id:"architecture",children:"Architecture"}),"\n",(0,t.jsx)(n.mermaid,{value:"graph TD\n    A[X-Fidelity Issue] --\x3e B[Command Triggered]\n    B --\x3e C{Command Delegation Enabled?}\n    C --\x3e|Yes| D[Check Configuration]\n    C --\x3e|No| E[Built-in Implementation]\n    D --\x3e F{External Extension Configured?}\n    F --\x3e|Yes| G[Delegate to External Extension]\n    F --\x3e|No| E\n    G --\x3e H{Extension Available?}\n    H --\x3e|Yes| I[Execute External Command]\n    H --\x3e|No| E\n    I --\x3e J[Success or Fallback to Built-in]"}),"\n",(0,t.jsx)(n.h3,{id:"command-types",children:"Command Types"}),"\n",(0,t.jsx)(n.p,{children:"The system supports delegation for three main command types:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Issue Explanation"})," (",(0,t.jsx)(n.code,{children:"explainIssue"}),")"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Provides detailed explanations of code quality issues"}),"\n",(0,t.jsx)(n.li,{children:"Context includes rule details, file location, and issue specifics"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Issue Fixing"})," (",(0,t.jsx)(n.code,{children:"fixIssue"}),")"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Provides automated fixes for individual issues"}),"\n",(0,t.jsx)(n.li,{children:"Context includes issue details and code location"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Batch Issue Fixing"})," (",(0,t.jsx)(n.code,{children:"fixIssueGroup"}),")"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Handles fixing multiple issues in a group"}),"\n",(0,t.jsx)(n.li,{children:"Context includes all issues in the group and grouping criteria"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"extension-points",children:"Extension Points"}),"\n",(0,t.jsxs)(n.p,{children:["Other VSCode extensions can contribute to X-Fidelity by declaring extension points in their ",(0,t.jsx)(n.code,{children:"package.json"}),":"]}),"\n",(0,t.jsx)(n.h3,{id:"issue-explainer-extension-point",children:"Issue Explainer Extension Point"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "contributes": {\n    "xfidelity.issueExplainer": [\n      {\n        "id": "my-ai-explainer",\n        "displayName": "AI Code Explainer",\n        "command": "myExtension.explainXFidelityIssue",\n        "supportedLanguages": ["javascript", "typescript", "python"]\n      }\n    ],\n    "commands": [\n      {\n        "command": "myExtension.explainXFidelityIssue",\n        "title": "Explain X-Fidelity Issue with AI"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"issue-fixer-extension-point",children:"Issue Fixer Extension Point"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "contributes": {\n    "xfidelity.issueFixer": [\n      {\n        "id": "my-auto-fixer",\n        "displayName": "Auto Code Fixer",\n        "command": "myExtension.fixXFidelityIssue",\n        "supportsBatch": true,\n        "supportedRuleTypes": ["complexity", "naming", "documentation"]\n      }\n    ],\n    "commands": [\n      {\n        "command": "myExtension.fixXFidelityIssue",\n        "title": "Fix X-Fidelity Issue Automatically"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"command-context",children:"Command Context"}),"\n",(0,t.jsx)(n.h3,{id:"issue-context",children:"Issue Context"}),"\n",(0,t.jsx)(n.p,{children:"When delegating issue commands, X-Fidelity provides a standardized context object:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"interface IssueContext {\n  ruleId: string;        // The rule that triggered the issue\n  message: string;       // Issue description\n  file: string;          // File path relative to workspace\n  line: number;          // Line number (1-based)\n  column: number;        // Column number (1-based)\n  severity: string;      // 'error', 'warning', 'info', 'hint'\n  category: string;      // Issue category\n  fixable: boolean;      // Whether the issue is marked as fixable\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"group-context",children:"Group Context"}),"\n",(0,t.jsx)(n.p,{children:"For batch operations, X-Fidelity provides a group context:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"interface IssueGroupContext {\n  groupKey: string;                                    // Group identifier\n  issues: IssueContext[];                             // Array of issues in the group\n  groupType: 'severity' | 'rule' | 'file' | 'category'; // How issues are grouped\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"user-configuration",children:"User Configuration"}),"\n",(0,t.jsx)(n.p,{children:"Users can configure command providers through VSCode settings:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "xfidelity.enableCommandDelegation": true,\n  "xfidelity.commandProviders": {\n    "explainIssue": "github.copilot",\n    "fixIssue": "ms-vscode.auto-fixer",\n    "fixIssueGroup": "built-in"\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"configuration-ui",children:"Configuration UI"}),"\n",(0,t.jsx)(n.p,{children:"X-Fidelity provides a convenient configuration interface:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Command Palette"}),": ",(0,t.jsx)(n.code,{children:"X-Fidelity: Configure Command Providers"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Settings UI"}),": Navigate to Extensions \u2192 X-Fidelity \u2192 Command Providers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Quick Access"}),': Use the "Configure Providers" button in default implementation dialogs']}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"implementation-examples",children:"Implementation Examples"}),"\n",(0,t.jsx)(n.h3,{id:"basic-issue-explainer",children:"Basic Issue Explainer"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Extension activation\nexport function activate(context: vscode.ExtensionContext) {\n  // Register the command declared in package.json\n  const disposable = vscode.commands.registerCommand(\n    'myExtension.explainXFidelityIssue',\n    async (issueContext: IssueContext) => {\n      try {\n        // Generate explanation based on issue context\n        const explanation = await generateExplanation(issueContext);\n        \n        // Show explanation to user\n        await vscode.window.showInformationMessage(\n          explanation,\n          { modal: true }\n        );\n      } catch (error) {\n        vscode.window.showErrorMessage(`Failed to explain issue: ${error}`);\n      }\n    }\n  );\n\n  context.subscriptions.push(disposable);\n}\n\nasync function generateExplanation(context: IssueContext): Promise<string> {\n  return `Rule ${context.ruleId} detected in ${context.file}:${context.line}\\n\\n` +\n         `Issue: ${context.message}\\n\\n` +\n         `This rule helps maintain code quality by...`;\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"advanced-issue-fixer-with-ai",children:"Advanced Issue Fixer with AI"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"export function activate(context: vscode.ExtensionContext) {\n  // Register single issue fixer\n  context.subscriptions.push(\n    vscode.commands.registerCommand(\n      'myExtension.fixXFidelityIssue',\n      async (issueContext: IssueContext | IssueGroupContext) => {\n        // Handle both single issues and groups\n        if ('issues' in issueContext) {\n          await handleBatchFix(issueContext);\n        } else {\n          await handleSingleFix(issueContext);\n        }\n      }\n    )\n  );\n}\n\nasync function handleSingleFix(context: IssueContext): Promise<void> {\n  // Open the file\n  const document = await vscode.workspace.openTextDocument(context.file);\n  const editor = await vscode.window.showTextDocument(document);\n\n  // Generate fix using AI\n  const fix = await generateAIFix(context, document);\n  \n  // Apply the fix\n  if (fix) {\n    await editor.edit(editBuilder => {\n      editBuilder.replace(fix.range, fix.newText);\n    });\n    \n    vscode.window.showInformationMessage(\n      `Fixed ${context.ruleId} in ${context.file}`\n    );\n  }\n}\n\nasync function handleBatchFix(context: IssueGroupContext): Promise<void> {\n  let fixedCount = 0;\n  \n  for (const issue of context.issues) {\n    try {\n      await handleSingleFix(issue);\n      fixedCount++;\n    } catch (error) {\n      console.error(`Failed to fix issue in ${issue.file}:`, error);\n    }\n  }\n  \n  vscode.window.showInformationMessage(\n    `Fixed ${fixedCount}/${context.issues.length} issues in group \"${context.groupKey}\"`\n  );\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsx)(n.h3,{id:"for-extension-developers",children:"For Extension Developers"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error Handling"}),": Always handle errors gracefully and provide meaningful feedback"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance"}),": Consider performance impact, especially for batch operations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"User Experience"}),": Provide clear progress indication for long-running operations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Compatibility"}),": Support multiple programming languages when possible"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Configuration"}),": Allow users to configure your extension's behavior"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"for-users",children:"For Users"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Start Simple"}),": Begin with built-in implementations to understand X-Fidelity"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"One at a Time"}),": Configure one command provider at a time to test functionality"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Monitor Performance"}),": Watch for performance impacts with AI-powered extensions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Backup Settings"}),": Export your VSCode settings before making changes"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Extension not detected"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Ensure the extension declares the correct extension points"}),"\n",(0,t.jsx)(n.li,{children:"Check that the extension is installed and enabled"}),"\n",(0,t.jsx)(n.li,{children:"Verify the extension point schema matches X-Fidelity's requirements"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Commands not delegating"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Check that command delegation is enabled in settings"}),"\n",(0,t.jsx)(n.li,{children:"Verify the configured extension ID is correct"}),"\n",(0,t.jsx)(n.li,{children:"Look for errors in the X-Fidelity output channel"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Performance issues"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Consider disabling AI-powered features for large files"}),"\n",(0,t.jsx)(n.li,{children:"Use batch operations judiciously"}),"\n",(0,t.jsx)(n.li,{children:"Monitor VSCode's performance"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"debug-information",children:"Debug Information"}),"\n",(0,t.jsx)(n.p,{children:"Enable debug logging to troubleshoot delegation issues:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "xfidelity.debugMode": true\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Check the X-Fidelity output channel for detailed delegation logs."}),"\n",(0,t.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Trust"}),": Only install and configure trusted extensions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Permissions"}),": Review what permissions delegated extensions request"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data"}),": Be aware that issue context is shared with external extensions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Network"}),": Some extensions may make network requests with your code"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"future-enhancements",children:"Future Enhancements"}),"\n",(0,t.jsx)(n.p,{children:"The command delegation system is designed for extensibility. Future enhancements may include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Rule-specific delegation"}),": Configure different providers per rule type"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Language-specific delegation"}),": Different providers for different programming languages"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Provider chaining"}),": Try multiple providers in sequence"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Marketplace integration"}),": Discover compatible extensions from the marketplace"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"contributing",children:"Contributing"}),"\n",(0,t.jsx)(n.p,{children:"To contribute to the command delegation system:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Extension Points"}),": Suggest new extension points for additional functionality"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Context Enhancement"}),": Propose additional context information for providers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"UI Improvements"}),": Suggest improvements to the configuration interface"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Documentation"}),": Help improve this documentation with examples and use cases"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"example-extensions",children:"Example Extensions"}),"\n",(0,t.jsx)(n.p,{children:"Here are some hypothetical extensions that could integrate with X-Fidelity:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"GitHub Copilot Integration"}),": AI-powered explanations and fixes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ESLint Auto-Fix"}),": Automatic fixing for JavaScript/TypeScript issues"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"SonarLint Integration"}),": Enhanced explanations with SonarQube rules"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"AI Code Review"}),": Comprehensive explanations using large language models"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Team Standards Fixer"}),": Fixes based on team-specific coding standards"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The command delegation system opens up endless possibilities for enhancing X-Fidelity's capabilities through the VSCode extension ecosystem."})]})}function x(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var s=i(6540);const t={},o=s.createContext(t);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);