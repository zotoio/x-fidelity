"use strict";(self.webpackChunkx_fidelity_website=self.webpackChunkx_fidelity_website||[]).push([[3976],{2053:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"intro","title":"Introduction to X-Fidelity","description":"X-Fidelity is a comprehensive code analysis framework that provides opinionated adherence checks for your codebase. Available as both a command-line tool and VSCode extension, it offers a flexible and extensible way to ensure your projects follow specific standards, tools, and best practices.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/","permalink":"/x-fidelity/docs/","draft":false,"unlisted":false,"editUrl":"https://github.com/zotoio/x-fidelity/edit/main/website/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"slug":"/"},"sidebar":"docs","next":{"title":"Getting Started","permalink":"/x-fidelity/docs/getting-started"}}');var t=i(4848),r=i(8453);const o={sidebar_position:1,slug:"/"},l="Introduction to X-Fidelity",d={},c=[{value:"Key Features",id:"key-features",level:2},{value:"Core Capabilities",id:"core-capabilities",level:3},{value:"User Interfaces",id:"user-interfaces",level:3},{value:"Integration Features",id:"integration-features",level:3},{value:"Monorepo Architecture",id:"monorepo-architecture",level:2},{value:"System Architecture",id:"system-architecture",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Choose Your Interface",id:"choose-your-interface",level:3},{value:"VSCode Extension (Recommended for Development)",id:"vscode-extension-recommended-for-development",level:4},{value:"Command Line Interface",id:"command-line-interface",level:4},{value:"Next Steps",id:"next-steps",level:2}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"introduction-to-x-fidelity",children:"Introduction to X-Fidelity"})}),"\n",(0,t.jsx)(n.p,{children:"X-Fidelity is a comprehensive code analysis framework that provides opinionated adherence checks for your codebase. Available as both a command-line tool and VSCode extension, it offers a flexible and extensible way to ensure your projects follow specific standards, tools, and best practices."}),"\n",(0,t.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Start here: See the 5\u2011minute ",(0,t.jsx)(n.a,{href:"/x-fidelity/docs/quickstart",children:"Quickstart"})," to run your first analysis."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"core-capabilities",children:"Core Capabilities"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Flexible Archetype System"}),": Define custom project archetypes with specific rules and configurations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Comprehensive Rule Engine"}),": JSON-based rules engine with conditions and actions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Advanced Analysis"}),": AST-based code analysis with Tree-sitter, dependency checking, and pattern matching"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Plugin Architecture"}),": 9 built-in plugins with universal logging system and custom extension support"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance Optimization"}),": File caching, TTL-based invalidation, and performance monitoring"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"user-interfaces",children:"User Interfaces"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"VSCode Extension"}),": 47 commands, real-time analysis, Problems panel integration, 40+ settings"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Command Line Interface"}),": Enhanced performance with caching, multiple output formats, server mode"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Configuration Server"}),": Centralized rule management with cache TTL and webhook support"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"integration-features",children:"Integration Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Remote Configuration"}),": Fetch configurations from a remote server for team consistency"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"OpenAI Integration"}),": AI-powered code analysis and suggestions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CI/CD Support"}),": Seamless integration with GitHub Actions, GitLab CI, and Jenkins"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Telemetry & Monitoring"}),": Built-in performance tracking and usage analytics"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"monorepo-architecture",children:"Monorepo Architecture"}),"\n",(0,t.jsx)(n.p,{children:"X-Fidelity is organized as a monorepo with specialized packages:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"x-fidelity-core"})}),": Core analysis engine and utilities"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"x-fidelity-vscode"})}),": VSCode extension for integrated development"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"x-fidelity-cli"})}),": Command-line interface"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"x-fidelity-server"})}),": Configuration server for centralized management"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"x-fidelity-plugins"})}),": 9 built-in plugins (AST, filesystem, dependency, etc.)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"x-fidelity-types"})}),": Shared TypeScript type definitions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"x-fidelity-democonfig"})}),": Demo configurations and example rules"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"x-fidelity-fixtures"})}),": Test fixtures and example projects"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"system-architecture",children:"System Architecture"}),"\n",(0,t.jsx)(n.mermaid,{value:'graph TD\n    subgraph "Development Environments"\n        VSCode[VSCode Extension]\n        CI[CI Environment]\n        Local[Local CLI]\n    end\n\n    subgraph "X-Fidelity Monorepo"\n        Core[x-fidelity-core<br/>Analysis Engine]\n        CLI[x-fidelity-cli<br/>CLI Interface]\n        VSExt[x-fidelity-vscode<br/>Extension Manager]\n        Plugins[x-fidelity-plugins<br/>9 Built-in Plugins]\n        Server[x-fidelity-server<br/>Config Server]\n        Types[x-fidelity-types<br/>Shared Types]\n    end\n\n    subgraph "External Services"\n        GH[GitHub]\n        OAI[OpenAI API]\n        Remote[Remote Config Server]\n    end\n\n    subgraph "Data Sources"\n        Files[Repository Files]\n        Deps[Dependencies]\n        Config[Configuration Files]\n    end\n\n    VSCode --\x3e|Uses| VSExt\n    CI --\x3e|Uses| CLI\n    Local --\x3e|Uses| CLI\n\n    VSExt --\x3e|Integrates| Core\n    CLI --\x3e|Uses| Core\n    Core --\x3e|Loads| Plugins\n    Core --\x3e|Uses| Types\n\n    Server --\x3e|Serves| Config\n    Core --\x3e|Fetches from| Remote\n    Core --\x3e|Analyzes| Files\n    Core --\x3e|Checks| Deps\n\n    Server --\x3e|Webhooks| GH\n    Core -.->|Optional| OAI\n\n    classDef monorepo fill:#e1f5fe\n    classDef optional stroke-dasharray: 5 5\n    classDef external fill:#fff3e0\n\n    class Core,CLI,VSExt,Plugins,Server,Types monorepo\n    class OAI optional\n    class GH,OAI,Remote external'}),"\n",(0,t.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,t.jsx)(n.h3,{id:"choose-your-interface",children:"Choose Your Interface"}),"\n",(0,t.jsx)(n.h4,{id:"vscode-extension-recommended-for-development",children:"VSCode Extension (Recommended for Development)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Install from marketplace (zero setup)\n# Search "X-Fidelity" in VSCode extensions\n\n# OR for development\ngit clone https://github.com/zotoio/x-fidelity.git\ncd x-fidelity\nyarn install && yarn build\n\n# Launch VSCode extension in debug mode\nyarn vscode:dev\n'})}),"\n",(0,t.jsx)(n.h4,{id:"command-line-interface",children:"Command Line Interface"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Install CLI tool\nyarn global add x-fidelity\nexport PATH="$PATH:$(yarn global bin)"\n\n# Run analysis (uses bundled CLI in VSCode by default)\nxfidelity .\n\n# Advanced usage\nxfidelity . --archetype node-fullstack --output-format json\n'})}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/docs/quickstart",children:"Quickstart"})})," - Run your first analysis in minutes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/docs/vscode-extension/overview",children:"VSCode Extension"})})," - Full-featured development experience"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/docs/key-concepts",children:"Key Concepts"})})," - Understanding archetypes, rules, and facts"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/docs/plugins/overview",children:"Plugin Development"})})," - Extending X-Fidelity functionality"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var s=i(6540);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);