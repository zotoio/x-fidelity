"use strict";(self.webpackChunkx_fidelity_website=self.webpackChunkx_fidelity_website||[]).push([[3688],{6908:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"environment-variables","title":"Environment Variables","description":"x-fidelity supports various environment variables to configure its behavior. This guide explains each available option.","source":"@site/docs/environment-variables.md","sourceDirName":".","slug":"/environment-variables","permalink":"/x-fidelity/docs/environment-variables","draft":false,"unlisted":false,"editUrl":"https://github.com/zotoio/x-fidelity/edit/main/website/docs/environment-variables.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"docs","previous":{"title":"Repository Configuration","permalink":"/x-fidelity/docs/xfi-config"},"next":{"title":"Config Server","permalink":"/x-fidelity/docs/config-server"}}');var s=i(4848),t=i(8453);const l={sidebar_position:8},o="Environment Variables",a={},c=[{value:"Core Configuration",id:"core-configuration",level:2},{value:"OpenAI Integration",id:"openai-integration",level:3},{value:"Server Configuration",id:"server-configuration",level:3},{value:"Security",id:"security",level:3},{value:"Logging",id:"logging",level:3},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Basic Setup",id:"basic-setup",level:3},{value:"Server Mode with SSL",id:"server-mode-with-ssl",level:3},{value:"Development Setup",id:"development-setup",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"environment-variables",children:"Environment Variables"})}),"\n",(0,s.jsx)(n.p,{children:"x-fidelity supports various environment variables to configure its behavior. This guide explains each available option."}),"\n",(0,s.jsx)(n.h2,{id:"core-configuration",children:"Core Configuration"}),"\n",(0,s.jsx)(n.h3,{id:"openai-integration",children:"OpenAI Integration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Your OpenAI API key for AI-powered analysis\nOPENAI_API_KEY=your_api_key_here\n\n# The OpenAI model to use (default: 'gpt-4o')\nOPENAI_MODEL=gpt-4o\n"})}),"\n",(0,s.jsx)(n.h3,{id:"server-configuration",children:"Server Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# The port for the config server to listen on (default: 8888)\nXFI_LISTEN_PORT=8888\n\n# Path to SSL certificates for HTTPS config server\nCERT_PATH=/path/to/certs\n\n# Allow self-signed certificates (use with caution)\nNODE_TLS_REJECT_UNAUTHORIZED=0\n"})}),"\n",(0,s.jsx)(n.h3,{id:"security",children:"Security"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Shared secret for securing telemetry and certain server routes\nXFI_SHARED_SECRET=your_shared_secret_here\n\n# Secret for GitHub webhook endpoints\nGITHUB_WEBHOOK_SECRET=your_github_webhook_secret\n"})}),"\n",(0,s.jsx)(n.h3,{id:"logging",children:"Logging"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Set logging level (default: 'info')\nXFI_LOG_LEVEL=debug\n\n# Disable colored output in CLI logs (default: enabled)\nXFI_LOG_COLORS=false\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"XFI_LOG_COLORS"})," environment variable controls whether CLI output includes ANSI color codes. This is useful in CI/CD, when redirecting logs to files, or in terminals that don't support colors. The VSCode extension disables colors when spawning the CLI."]}),"\n",(0,s.jsx)(n.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,s.jsx)(n.h3,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"export OPENAI_API_KEY=your_api_key_here\nexport XFI_SHARED_SECRET=your_shared_secret_here\nxfidelity .\n"})}),"\n",(0,s.jsx)(n.h3,{id:"server-mode-with-ssl",children:"Server Mode with SSL"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"export XFI_LISTEN_PORT=9999\nexport CERT_PATH=/etc/ssl/certs\nexport XFI_SHARED_SECRET=your_shared_secret_here\nxfidelity --mode server\n"})}),"\n",(0,s.jsx)(n.h3,{id:"development-setup",children:"Development Setup"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"export NODE_TLS_REJECT_UNAUTHORIZED=0\nexport XFI_LOG_LEVEL=debug\nxfidelity . --configServer https://localhost:8888\n"})}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Security"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Never commit environment variables to version control"}),"\n",(0,s.jsx)(n.li,{children:"Use strong, unique secrets"}),"\n",(0,s.jsx)(n.li,{children:"Rotate secrets regularly"}),"\n",(0,s.jsx)(n.li,{children:"Use different secrets for development and production"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Configuration Management"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use a ",(0,s.jsx)(n.code,{children:".env"})," file for local development"]}),"\n",(0,s.jsx)(n.li,{children:"Use CI/CD secrets for production"}),"\n",(0,s.jsx)(n.li,{children:"Document all required variables"}),"\n",(0,s.jsx)(n.li,{children:"Provide example values"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"SSL/TLS"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Always use HTTPS in production"}),"\n",(0,s.jsx)(n.li,{children:"Only disable certificate verification in development"}),"\n",(0,s.jsx)(n.li,{children:"Use proper certificates in production"}),"\n",(0,s.jsx)(n.li,{children:"Keep certificates up to date"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Logging"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use appropriate log levels"}),"\n",(0,s.jsx)(n.li,{children:"Enable debug logging when needed"}),"\n",(0,s.jsx)(n.li,{children:"Monitor log output"}),"\n",(0,s.jsx)(n.li,{children:"Rotate log files"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Set up ",(0,s.jsx)(n.a,{href:"local-config",children:"Local Configuration"})]}),"\n",(0,s.jsxs)(n.li,{children:["Configure ",(0,s.jsx)(n.a,{href:"remote-config",children:"Remote Configuration"})]}),"\n",(0,s.jsxs)(n.li,{children:["Learn about ",(0,s.jsx)(n.a,{href:"openai-integration",children:"OpenAI Integration"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var r=i(6540);const s={},t=r.createContext(s);function l(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);