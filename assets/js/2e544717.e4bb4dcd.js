"use strict";(self.webpackChunkx_fidelity_website=self.webpackChunkx_fidelity_website||[]).push([[1628],{4642:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"rules","title":"Rules","description":"Rules are the core building blocks of x-fidelity\'s analysis system. They define what to check for and how to respond to findings.","source":"@site/docs/rules.md","sourceDirName":".","slug":"/rules","permalink":"/x-fidelity/docs/rules","draft":false,"unlisted":false,"editUrl":"https://github.com/zotoio/x-fidelity/edit/main/website/docs/rules.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"docs","previous":{"title":"Archetypes","permalink":"/x-fidelity/docs/archetypes"},"next":{"title":"Operators","permalink":"/x-fidelity/docs/operators"}}');var r=i(4848),l=i(8453);const t={sidebar_position:5},o="Rules",c={},d=[{value:"Rule Structure",id:"rule-structure",level:2},{value:"Rule Types",id:"rule-types",level:2},{value:"Global Rules",id:"global-rules",level:3},{value:"Iterative Rules",id:"iterative-rules",level:3},{value:"Conditions",id:"conditions",level:2},{value:"Condition Types",id:"condition-types",level:3},{value:"All Conditions",id:"all-conditions",level:4},{value:"Any Conditions",id:"any-conditions",level:4},{value:"Events",id:"events",level:2},{value:"Event Types",id:"event-types",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Error Behavior",id:"error-behavior",level:3},{value:"Error Actions",id:"error-actions",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Next Steps",id:"next-steps",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"rules",children:"Rules"})}),"\n",(0,r.jsx)(n.p,{children:"Rules are the core building blocks of x-fidelity's analysis system. They define what to check for and how to respond to findings."}),"\n",(0,r.jsx)(n.h2,{id:"rule-structure",children:"Rule Structure"}),"\n",(0,r.jsx)(n.p,{children:"A rule consists of:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Name"}),": Unique identifier with suffix indicating scope (",(0,r.jsx)(n.code,{children:"-global"})," or ",(0,r.jsx)(n.code,{children:"-iterative"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Conditions"}),": Logic to evaluate using facts and operators"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Event"}),": Action to take when conditions are met"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Error Behavior"}),": Optional handling of execution errors"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Error Actions"}),": Optional custom actions to take on errors"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example rule:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "name": "sensitiveLogging-iterative",\n    "conditions": {\n        "all": [\n            {\n                "fact": "fileData",\n                "path": "$.fileName",\n                "operator": "notEqual",\n                "value": "REPO_GLOBAL_CHECK"\n            },\n            {\n                "fact": "repoFileAnalysis",\n                "params": {\n                    "checkPattern": ["password", "apiKey"],\n                    "resultFact": "fileResults"\n                },\n                "operator": "fileContains",\n                "value": true\n            }\n        ]\n    },\n    "event": {\n        "type": "warning",\n        "params": {\n            "message": "Potential sensitive data exposure",\n            "details": {\n                "fact": "fileResults"\n            }\n        }\n    },\n    "errorBehavior": "fatal",\n    "onError": {\n        "action": "sendNotification",\n        "params": {\n            "channel": "security-alerts",\n            "priority": "high"\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"rule-types",children:"Rule Types"}),"\n",(0,r.jsx)(n.h3,{id:"global-rules",children:"Global Rules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Applied once per repository"}),"\n",(0,r.jsxs)(n.li,{children:["Use suffix ",(0,r.jsx)(n.code,{children:"-global"})]}),"\n",(0,r.jsx)(n.li,{children:"Check repository-wide concerns"}),"\n",(0,r.jsx)(n.li,{children:"Examples: dependency versions, directory structure"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"iterative-rules",children:"Iterative Rules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Applied to each matching file"}),"\n",(0,r.jsxs)(n.li,{children:["Use suffix ",(0,r.jsx)(n.code,{children:"-iterative"})]}),"\n",(0,r.jsx)(n.li,{children:"Check file-specific concerns"}),"\n",(0,r.jsx)(n.li,{children:"Examples: sensitive data, coding patterns"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"conditions",children:"Conditions"}),"\n",(0,r.jsx)(n.p,{children:"Conditions define when a rule should trigger. They can use:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Facts"}),": Data about the codebase"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Operators"}),": Functions to evaluate conditions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Paths"}),": JSONPath expressions to access nested data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Values"}),": Expected results to compare against"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"condition-types",children:"Condition Types"}),"\n",(0,r.jsx)(n.h4,{id:"all-conditions",children:"All Conditions"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"conditions": {\n    "all": [\n        { /* condition 1 */ },\n        { /* condition 2 */ }\n    ]\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"All conditions must be true for the rule to trigger."}),"\n",(0,r.jsx)(n.h4,{id:"any-conditions",children:"Any Conditions"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"conditions": {\n    "any": [\n        { /* condition 1 */ },\n        { /* condition 2 */ }\n    ]\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"At least one condition must be true for the rule to trigger."}),"\n",(0,r.jsx)(n.h2,{id:"events",children:"Events"}),"\n",(0,r.jsx)(n.p,{children:"Events define what happens when conditions are met:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"event": {\n    "type": "warning",\n    "params": {\n        "message": "Description of the issue",\n        "details": {\n            "fact": "resultFactName"\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"event-types",children:"Event Types"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"warning"}),": Issue that should be addressed but won't fail the build"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"fatality"}),": Critical issue that will fail the build"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"exempt"}),": Rule is currently exempted for this repository"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.h3,{id:"error-behavior",children:"Error Behavior"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"errorBehavior": "fatal"  // or "swallow"\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"fatal"}),": Stop execution on error"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"swallow"}),": Continue execution after error"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"error-actions",children:"Error Actions"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"onError": {\n    "action": "sendNotification",\n    "params": {\n        "channel": "alerts",\n        "priority": "high"\n    }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Built-in error actions:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"sendNotification"}),": Send alert to configured channel"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"logToFile"}),": Write error details to log file"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Naming"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use descriptive names"}),"\n",(0,r.jsx)(n.li,{children:"Include correct scope suffix"}),"\n",(0,r.jsxs)(n.li,{children:["Follow ",(0,r.jsx)(n.code,{children:"kebab-case"})," convention"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Conditions"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Keep conditions focused"}),"\n",(0,r.jsx)(n.li,{children:"Use appropriate operators"}),"\n",(0,r.jsx)(n.li,{children:"Consider performance impact"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Events"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Write clear messages"}),"\n",(0,r.jsx)(n.li,{children:"Include relevant details"}),"\n",(0,r.jsx)(n.li,{children:"Use appropriate event type"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Error Handling"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Define error behavior explicitly"}),"\n",(0,r.jsx)(n.li,{children:"Implement appropriate error actions"}),"\n",(0,r.jsx)(n.li,{children:"Log sufficient details"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Testing"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Test rules with various inputs"}),"\n",(0,r.jsx)(n.li,{children:"Verify error handling"}),"\n",(0,r.jsx)(n.li,{children:"Check exemption behavior"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Learn about ",(0,r.jsx)(n.a,{href:"operators",children:"Operators"})]}),"\n",(0,r.jsxs)(n.li,{children:["Explore ",(0,r.jsx)(n.a,{href:"facts",children:"Facts"})]}),"\n",(0,r.jsxs)(n.li,{children:["Understand ",(0,r.jsx)(n.a,{href:"exemptions",children:"Exemptions"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var s=i(6540);const r={},l=s.createContext(r);function t(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);