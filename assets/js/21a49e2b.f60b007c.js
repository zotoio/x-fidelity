"use strict";(self.webpackChunkx_fidelity_website=self.webpackChunkx_fidelity_website||[]).push([[4893],{2798:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"notifications","title":"Notifications","description":"X-Fidelity can send notifications about analysis results through various channels. This feature helps keep teams informed about code quality issues and architectural compliance.","source":"@site/docs/notifications.md","sourceDirName":".","slug":"/notifications","permalink":"/x-fidelity/docs/notifications","draft":false,"unlisted":false,"editUrl":"https://github.com/zotoio/x-fidelity/edit/main/website/docs/notifications.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Library Migration Tracking","permalink":"/x-fidelity/docs/library-migration-tracking"},"next":{"title":"Local Configuration","permalink":"/x-fidelity/docs/local-config"}}');var t=i(4848),o=i(8453);const l={},r="Notifications",c={},a=[{value:"Configuration",id:"configuration",level:2},{value:"Global Configuration",id:"global-configuration",level:3},{value:"Repository Configuration",id:"repository-configuration",level:3},{value:"Providers",id:"providers",level:2},{value:"Email (Currently Available)",id:"email-currently-available",level:3},{value:"Slack (Coming Soon)",id:"slack-coming-soon",level:3},{value:"Microsoft Teams (Coming Soon)",id:"microsoft-teams-coming-soon",level:3},{value:"Code Owners Integration",id:"code-owners-integration",level:2},{value:"Notification Content",id:"notification-content",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"notifications",children:"Notifications"})}),"\n",(0,t.jsx)(e.p,{children:"X-Fidelity can send notifications about analysis results through various channels. This feature helps keep teams informed about code quality issues and architectural compliance."}),"\n",(0,t.jsx)(e.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(e.p,{children:"Notifications can be configured both globally and per-repository:"}),"\n",(0,t.jsx)(e.h3,{id:"global-configuration",children:"Global Configuration"}),"\n",(0,t.jsx)(e.p,{children:"Set these environment variables to configure notifications globally:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# Enable/disable notifications\nNOTIFICATIONS_ENABLED=true\n\n# Configure notification providers (comma-separated)\nNOTIFICATION_PROVIDERS=email,slack,teams\n\n# Enable/disable notifications for specific events\nNOTIFY_ON_SUCCESS=true\nNOTIFY_ON_FAILURE=true\n\n# Code owners integration\nCODEOWNERS_PATH=.github/CODEOWNERS\nCODEOWNERS_ENABLED=true\n"})}),"\n",(0,t.jsx)(e.h3,{id:"repository-configuration",children:"Repository Configuration"}),"\n",(0,t.jsxs)(e.p,{children:["Add notification settings to your ",(0,t.jsx)(e.code,{children:".xfi-config.json"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",children:'{\n  "notifications": {\n    "recipients": {\n      "email": ["team@example.com"],\n      "slack": ["#engineering"],\n      "teams": ["Engineering Team"]\n    },\n    "codeOwners": true,\n    "notifyOnSuccess": true,\n    "notifyOnFailure": true,\n    "customTemplates": {\n      "success": "All checks passed successfully! \ud83c\udf89\\n\\nArchetype: ${archetype}\\nFiles analyzed: ${fileCount}\\nExecution time: ${executionTime}s",\n      "failure": "Issues found in codebase:\\n\\nArchetype: ${archetype}\\nTotal issues: ${totalIssues}\\n- Warnings: ${warningCount}\\n- Errors: ${errorCount}\\n- Fatalities: ${fatalityCount}\\n\\nAffected files:\\n${affectedFiles}"\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"providers",children:"Providers"}),"\n",(0,t.jsx)(e.h3,{id:"email-currently-available",children:"Email (Currently Available)"}),"\n",(0,t.jsx)(e.p,{children:"Email is currently the only fully implemented notification provider. Configure email notifications with these environment variables:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"NOTIFICATION_EMAIL_HOST=smtp.example.com\nNOTIFICATION_EMAIL_PORT=587\nNOTIFICATION_EMAIL_SECURE=false\nNOTIFICATION_EMAIL_USER=user@example.com\nNOTIFICATION_EMAIL_PASS=password\nNOTIFICATION_EMAIL_FROM=xfidelity@example.com\n"})}),"\n",(0,t.jsx)(e.h3,{id:"slack-coming-soon",children:"Slack (Coming Soon)"}),"\n",(0,t.jsx)(e.p,{children:"Slack notifications are planned but not yet implemented."}),"\n",(0,t.jsx)(e.h3,{id:"microsoft-teams-coming-soon",children:"Microsoft Teams (Coming Soon)"}),"\n",(0,t.jsx)(e.p,{children:"Microsoft Teams notifications are planned but not yet implemented."}),"\n",(0,t.jsx)(e.h2,{id:"code-owners-integration",children:"Code Owners Integration"}),"\n",(0,t.jsxs)(e.p,{children:["When ",(0,t.jsx)(e.code,{children:"codeOwners"})," is enabled, X-Fidelity will:"]}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"Parse your CODEOWNERS file"}),"\n",(0,t.jsx)(e.li,{children:"Match affected files with code owners"}),"\n",(0,t.jsx)(e.li,{children:"Include relevant code owners in notifications"}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"Example CODEOWNERS file:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"# Default owners for everything\n*       @global-owner1 @global-owner2\n\n# Owners for specific paths\n/src/frontend/   @frontend-team\n/src/backend/    @backend-team\n*.ts            @typescript-reviewers\n"})}),"\n",(0,t.jsx)(e.h2,{id:"notification-content",children:"Notification Content"}),"\n",(0,t.jsx)(e.p,{children:"Notifications include:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Analysis summary (archetype, files analyzed, execution time)"}),"\n",(0,t.jsx)(e.li,{children:"Issue counts (warnings, errors, fatalities)"}),"\n",(0,t.jsx)(e.li,{children:"Affected files with issue details"}),"\n",(0,t.jsx)(e.li,{children:"Links to relevant code (when available)"}),"\n",(0,t.jsx)(e.li,{children:"Full results in YAML format (email only)"}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"Use team channels rather than individual recipients"}),"\n",(0,t.jsx)(e.li,{children:"Enable code owners integration to automatically notify relevant teams"}),"\n",(0,t.jsx)(e.li,{children:"Configure success notifications judiciously to avoid notification fatigue"}),"\n",(0,t.jsx)(e.li,{children:"Use custom templates to match your team's communication style"}),"\n",(0,t.jsx)(e.li,{children:"Include context-specific links (CI/CD runs, documentation) in custom templates"}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(e.p,{children:"Common issues and solutions:"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Notifications not sending"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["Check if ",(0,t.jsx)(e.code,{children:"NOTIFICATIONS_ENABLED"})," is set to true"]}),"\n",(0,t.jsx)(e.li,{children:"Verify provider credentials and webhook URLs"}),"\n",(0,t.jsx)(e.li,{children:"Check network connectivity to notification services"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Missing recipients"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Verify CODEOWNERS file syntax"}),"\n",(0,t.jsxs)(e.li,{children:["Check recipient format in ",(0,t.jsx)(e.code,{children:".xfi-config.json"})]}),"\n",(0,t.jsx)(e.li,{children:"Ensure providers are properly configured"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Rate limiting"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Implement exponential backoff for retries"}),"\n",(0,t.jsx)(e.li,{children:"Consider batching notifications"}),"\n",(0,t.jsx)(e.li,{children:"Monitor provider rate limits"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Template errors"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Validate template syntax"}),"\n",(0,t.jsx)(e.li,{children:"Check for missing variables"}),"\n",(0,t.jsx)(e.li,{children:"Use proper escaping for special characters"}),"\n"]}),"\n"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>r});var s=i(6540);const t={},o=s.createContext(t);function l(n){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),s.createElement(o.Provider,{value:e},n.children)}}}]);