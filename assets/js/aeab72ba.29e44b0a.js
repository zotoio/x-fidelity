"use strict";(self.webpackChunkx_fidelity_website=self.webpackChunkx_fidelity_website||[]).push([[5304],{8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>r});var s=i(6540);const l={},a=s.createContext(l);function t(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),s.createElement(a.Provider,{value:n},e.children)}},8702:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"xfi-config","title":"Repository Configuration","description":"The .xfi-config.json file allows you to configure x-fidelity behavior specific to your repository.","source":"@site/docs/xfi-config.md","sourceDirName":".","slug":"/xfi-config","permalink":"/x-fidelity/docs/xfi-config","draft":false,"unlisted":false,"editUrl":"https://github.com/zotoio/x-fidelity/edit/main/website/docs/xfi-config.md","tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"sidebar_position":13},"sidebar":"docs","previous":{"title":"Remote Configuration","permalink":"/x-fidelity/docs/remote-config"},"next":{"title":"Environment Variables","permalink":"/x-fidelity/docs/environment-variables"}}');var l=i(4848),a=i(8453);const t={sidebar_position:13},r="Repository Configuration",o={},d=[{value:"Overview",id:"overview",level:2},{value:"Configuration File",id:"configuration-file",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"sensitiveFileFalsePositives",id:"sensitivefilefalsepositives",level:3},{value:"additionalPlugins",id:"additionalplugins",level:3},{value:"additionalFacts",id:"additionalfacts",level:3},{value:"additionalOperators",id:"additionaloperators",level:3},{value:"additionalRules",id:"additionalrules",level:3},{value:"Complete Example",id:"complete-example",level:2},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Adding Custom Validation with Remote API",id:"adding-custom-validation-with-remote-api",level:3},{value:"Enforcing Required Files",id:"enforcing-required-files",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Validation",id:"validation",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"repository-configuration",children:"Repository Configuration"})}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:".xfi-config.json"})," file allows you to configure x-fidelity behavior specific to your repository."]}),"\n",(0,l.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:".xfi-config.json"})," file provides repository-specific configurations that override or supplement global settings. This is particularly useful for:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Excluding false positives"}),"\n",(0,l.jsx)(n.li,{children:"Customizing behavior for specific repositories"}),"\n",(0,l.jsx)(n.li,{children:"Adding custom rules, facts, operators, and plugins"}),"\n",(0,l.jsx)(n.li,{children:"Managing repository-specific exceptions"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"configuration-file",children:"Configuration File"}),"\n",(0,l.jsxs)(n.p,{children:["Place ",(0,l.jsx)(n.code,{children:".xfi-config.json"})," in your repository's root directory:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "sensitiveFileFalsePositives": [\n    "path/to/exclude/file1.js",\n    "path/to/exclude/file2.ts"\n  ],\n  "additionalRules": [],\n  "additionalFacts": [],\n  "additionalOperators": [],\n  "additionalPlugins": []\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,l.jsx)(n.h3,{id:"sensitivefilefalsepositives",children:"sensitiveFileFalsePositives"}),"\n",(0,l.jsx)(n.p,{children:"An array of file paths that should be excluded from sensitive data checks:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "sensitiveFileFalsePositives": [\n    "src/config/defaults.ts",\n    "test/fixtures/mockData.js"\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Paths should be relative to repository root"}),"\n",(0,l.jsx)(n.li,{children:"Supports glob patterns"}),"\n",(0,l.jsx)(n.li,{children:"Case-sensitive matching"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"additionalplugins",children:"additionalPlugins"}),"\n",(0,l.jsx)(n.p,{children:"An array of plugin module names to load for this repository:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "additionalPlugins": [\n    "xfiPluginSimpleExample",\n    "xfiPluginRequiredFiles",\n    "xfiPluginRemoteStringValidator"\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Plugin modules must be installed and accessible to x-fidelity"}),"\n",(0,l.jsx)(n.li,{children:"Plugins provide custom facts and operators that can be used in rules"}),"\n",(0,l.jsx)(n.li,{children:"Repository-specific plugins are loaded after archetype-specified plugins"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"additionalfacts",children:"additionalFacts"}),"\n",(0,l.jsx)(n.p,{children:"An array of fact names to add to the archetype's facts:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "additionalFacts": [\n    "customFact",\n    "missingRequiredFiles",\n    "remoteSubstringValidation"\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Facts must be provided by loaded plugins"}),"\n",(0,l.jsx)(n.li,{children:"Repository-specific facts are merged with archetype facts"}),"\n",(0,l.jsx)(n.li,{children:"Duplicate fact names are only loaded once"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"additionaloperators",children:"additionalOperators"}),"\n",(0,l.jsx)(n.p,{children:"An array of operator names to add to the archetype's operators:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "additionalOperators": [\n    "customOperator",\n    "missingRequiredFiles",\n    "invalidRemoteValidation"\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Operators must be provided by loaded plugins"}),"\n",(0,l.jsx)(n.li,{children:"Repository-specific operators are merged with archetype operators"}),"\n",(0,l.jsx)(n.li,{children:"Duplicate operator names are only loaded once"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"additionalrules",children:"additionalRules"}),"\n",(0,l.jsx)(n.p,{children:"An array of custom rule definitions to add to the archetype's rules:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "additionalRules": [\n    {\n      "name": "custom-rule",\n      "conditions": {\n        "all": [\n          {\n            "fact": "fileData",\n            "path": "$.fileName",\n            "operator": "equal",\n            "value": "REPO_GLOBAL_CHECK"\n          },\n          {\n            "fact": "customFact",\n            "operator": "customOperator",\n            "value": "custom fact data"\n          }\n        ]\n      },\n      "event": {\n        "type": "warning",\n        "params": {\n          "message": "Custom rule detected matching data",\n          "details": {\n            "fact": "customFact"\n          }\n        }\n      }\n    }\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Rules must follow the standard rule schema"}),"\n",(0,l.jsx)(n.li,{children:"Rules can use any facts and operators available (including custom ones)"}),"\n",(0,l.jsx)(n.li,{children:"Repository-specific rules are added to the archetype rules"}),"\n",(0,l.jsx)(n.li,{children:"Rules are validated before being added"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"complete-example",children:"Complete Example"}),"\n",(0,l.jsxs)(n.p,{children:["Here's a complete example of a ",(0,l.jsx)(n.code,{children:".xfi-config.json"})," file that uses all available options:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "sensitiveFileFalsePositives": [\n    "src/config/defaults.ts",\n    "test/fixtures/mockData.js"\n  ],\n  "additionalPlugins": [\n    "xfiPluginSimpleExample"\n  ],\n  "additionalFacts": [\n    "customFact"\n  ],\n  "additionalOperators": [\n    "customOperator"\n  ],\n  "additionalRules": [\n    {\n      "name": "custom-rule",\n      "conditions": {\n        "all": [\n          {\n            "fact": "fileData",\n            "path": "$.fileName",\n            "operator": "equal",\n            "value": "REPO_GLOBAL_CHECK"\n          },\n          {\n            "fact": "customFact",\n            "operator": "customOperator",\n            "value": "custom fact data"\n          }\n        ]\n      },\n      "event": {\n        "type": "warning",\n        "params": {\n          "message": "Custom rule detected matching data",\n          "details": {\n            "fact": "customFact"\n          }\n        }\n      }\n    }\n  ]\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,l.jsx)(n.h3,{id:"adding-custom-validation-with-remote-api",children:"Adding Custom Validation with Remote API"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "additionalPlugins": ["xfiPluginRemoteStringValidator"],\n  "additionalFacts": ["remoteSubstringValidation"],\n  "additionalOperators": ["invalidRemoteValidation"],\n  "additionalRules": [\n    {\n      "name": "invalid-system-id",\n      "conditions": {\n        "all": [\n          {\n            "fact": "fileData",\n            "path": "$.fileName",\n            "operator": "equal",\n            "value": "config.json"\n          },\n          {\n            "fact": "remoteSubstringValidation",\n            "params": {\n              "pattern": "\\"systemId\\":[\\\\s]*\\"([a-z]*)\\"",\n              "flags": "gi",\n              "validationParams": {\n                "url": "http://validation-api/validate",\n                "method": "POST",\n                "headers": {\n                  "Content-Type": "application/json"\n                },\n                "body": {\n                  "systemId": "#MATCH#"\n                },\n                "checkJsonPath": "$.validSystems[?(@.id == \'#MATCH#\')]"\n              },\n              "resultFact": "systemIdValidationResult"\n            },\n            "operator": "invalidRemoteValidation",\n            "value": true\n          }\n        ]\n      },\n      "event": {\n        "type": "fatality",\n        "params": {\n          "message": "Invalid system ID detected in configuration",\n          "details": {\n            "fact": "systemIdValidationResult"\n          }\n        }\n      }\n    }\n  ]\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"enforcing-required-files",children:"Enforcing Required Files"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "additionalPlugins": ["xfiPluginRequiredFiles"],\n  "additionalFacts": ["missingRequiredFiles"],\n  "additionalOperators": ["missingRequiredFiles"],\n  "additionalRules": [\n    {\n      "name": "required-files-check",\n      "conditions": {\n        "all": [\n          {\n            "fact": "fileData",\n            "path": "$.fileName",\n            "operator": "equal",\n            "value": "REPO_GLOBAL_CHECK"\n          },\n          {\n            "fact": "missingRequiredFiles",\n            "params": {\n              "requiredFiles": [\n                "/README.md",\n                "/CONTRIBUTING.md",\n                "/LICENSE"\n              ],\n              "resultFact": "missingRequiredFilesResult"\n            },\n            "operator": "missingRequiredFiles",\n            "value": true\n          }\n        ]\n      },\n      "event": {\n        "type": "warning",\n        "params": {\n          "message": "Required files are missing from the repository",\n          "details": {\n            "fact": "missingRequiredFilesResult"\n          }\n        }\n      }\n    }\n  ]\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Version Control"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Include ",(0,l.jsx)(n.code,{children:".xfi-config.json"})," in your version control system to ensure consistency across your team."]}),"\n",(0,l.jsx)(n.li,{children:"Document changes in commit messages."}),"\n",(0,l.jsx)(n.li,{children:"Review changes during code review."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Documentation"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Comment custom rules and their purpose."}),"\n",(0,l.jsx)(n.li,{children:"Explain why specific plugins are needed."}),"\n",(0,l.jsx)(n.li,{children:"Keep documentation up-to-date."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Regular Review"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Periodically review your ",(0,l.jsx)(n.code,{children:".xfi-config.json"})," to ensure the configurations are still necessary and valid."]}),"\n",(0,l.jsx)(n.li,{children:"Remove unnecessary rules or plugins."}),"\n",(0,l.jsx)(n.li,{children:"Update as codebase changes."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Minimal Use"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Use custom rules sparingly."}),"\n",(0,l.jsx)(n.li,{children:"Consider adding important rules to the archetype configuration instead."}),"\n",(0,l.jsx)(n.li,{children:"Don't use to bypass security checks."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Team Communication"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Discuss custom rules with team."}),"\n",(0,l.jsx)(n.li,{children:"Document decisions."}),"\n",(0,l.jsx)(n.li,{children:"Consider alternatives."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"validation",children:"Validation"}),"\n",(0,l.jsxs)(n.p,{children:["x-fidelity validates ",(0,l.jsx)(n.code,{children:".xfi-config.json"})," using JSON Schema. Custom rules are also validated against the rule schema before being added to the engine."]}),"\n",(0,l.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,l.jsxs)(n.p,{children:["If ",(0,l.jsx)(n.code,{children:".xfi-config.json"})," is invalid:"]}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Error message displayed"}),"\n",(0,l.jsx)(n.li,{children:"Default configuration used"}),"\n",(0,l.jsx)(n.li,{children:"Analysis continues"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"If individual custom rules are invalid:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Warning message displayed"}),"\n",(0,l.jsx)(n.li,{children:"Invalid rules are skipped"}),"\n",(0,l.jsx)(n.li,{children:"Valid rules are still applied"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Configure ",(0,l.jsx)(n.a,{href:"local-config",children:"Local Rules"})]}),"\n",(0,l.jsxs)(n.li,{children:["Set up ",(0,l.jsx)(n.a,{href:"remote-config",children:"Remote Configuration"})]}),"\n",(0,l.jsxs)(n.li,{children:["Learn about ",(0,l.jsx)(n.a,{href:"exemptions",children:"Exemptions"})]}),"\n",(0,l.jsxs)(n.li,{children:["Explore ",(0,l.jsx)(n.a,{href:"plugins/creating-plugins",children:"Creating Plugins"})]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}}}]);