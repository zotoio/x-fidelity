"use strict";(self.webpackChunkx_fidelity_website=self.webpackChunkx_fidelity_website||[]).push([[7924],{6475:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"getting-started","title":"Getting Started","description":"This guide will help you get up and running with X-Fidelity quickly. X-Fidelity is available as both a command-line tool and a VSCode extension.","source":"@site/docs/getting-started.md","sourceDirName":".","slug":"/getting-started","permalink":"/x-fidelity/docs/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/zotoio/x-fidelity/edit/main/website/docs/getting-started.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docs","previous":{"title":"Introduction to X-Fidelity","permalink":"/x-fidelity/docs/"},"next":{"title":"Key Concepts","permalink":"/x-fidelity/docs/key-concepts"}}');var l=i(4848),r=i(8453);const t={sidebar_position:2},o="Getting Started",d={},c=[{value:"Choose Your Interface",id:"choose-your-interface",level:2},{value:"VSCode Extension (Recommended for Development)",id:"vscode-extension-recommended-for-development",level:3},{value:"Command Line Interface",id:"command-line-interface",level:3},{value:"CLI Installation",id:"cli-installation",level:2},{value:"Quick Start with CLI",id:"quick-start-with-cli",level:2},{value:"Command Line Options",id:"command-line-options",level:2},{value:"Environment Variables",id:"environment-variables",level:2},{value:"Example Commands",id:"example-commands",level:2},{value:"Monorepo Structure",id:"monorepo-structure",level:2},{value:"Development Setup",id:"development-setup",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Local Configuration",id:"local-configuration",level:3},{value:"Remote Configuration",id:"remote-configuration",level:3},{value:"Next Steps",id:"next-steps",level:2},{value:"For Developers",id:"for-developers",level:3},{value:"For Teams",id:"for-teams",level:3},{value:"Core Concepts",id:"core-concepts",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,l.jsx)(n.p,{children:"This guide will help you get up and running with X-Fidelity quickly. X-Fidelity is available as both a command-line tool and a VSCode extension."}),"\n",(0,l.jsx)(n.h2,{id:"choose-your-interface",children:"Choose Your Interface"}),"\n",(0,l.jsx)(n.h3,{id:"vscode-extension-recommended-for-development",children:"VSCode Extension (Recommended for Development)"}),"\n",(0,l.jsx)(n.p,{children:"The VSCode extension provides the most comprehensive development experience with real-time analysis, visual tree views, and integrated debugging."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Quick Start:"})}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Clone the repository: ",(0,l.jsx)(n.code,{children:"git clone https://github.com/zotoio/x-fidelity.git"})]}),"\n",(0,l.jsxs)(n.li,{children:["Install dependencies: ",(0,l.jsx)(n.code,{children:"yarn install"})]}),"\n",(0,l.jsxs)(n.li,{children:["Build packages: ",(0,l.jsx)(n.code,{children:"yarn build"})]}),"\n",(0,l.jsxs)(n.li,{children:["Launch extension: ",(0,l.jsx)(n.code,{children:"yarn vscode:dev"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"./vscode-extension/overview",children:"\u2192 Learn more about the VSCode Extension"})}),"\n",(0,l.jsx)(n.h3,{id:"command-line-interface",children:"Command Line Interface"}),"\n",(0,l.jsx)(n.p,{children:"The CLI provides programmatic access and is perfect for CI/CD integration and scripting."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Quick Start:"})}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Install: ",(0,l.jsx)(n.code,{children:"yarn global add x-fidelity"})]}),"\n",(0,l.jsxs)(n.li,{children:["Set PATH: ",(0,l.jsx)(n.code,{children:'export PATH="$PATH:$(yarn global bin)"'})]}),"\n",(0,l.jsxs)(n.li,{children:["Run analysis: ",(0,l.jsx)(n.code,{children:"xfidelity ."})]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"cli-installation",children:"CLI Installation"}),"\n",(0,l.jsx)(n.p,{children:"Install x-fidelity using Node.js 18+ and Yarn:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'yarn global add x-fidelity\nexport PATH="$PATH:$(yarn global bin)"\n'})}),"\n",(0,l.jsxs)(n.p,{children:["For persistent access, add the PATH line to your ",(0,l.jsx)(n.code,{children:"~/.bashrc"})," or ",(0,l.jsx)(n.code,{children:"~/.zshrc"})," file."]}),"\n",(0,l.jsx)(n.h2,{id:"quick-start-with-cli",children:"Quick Start with CLI"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Run with demo configuration"})," in your project directory:"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"xfidelity .\n"})}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"View available options"}),":"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"xfidelity --help\n"})}),"\n",(0,l.jsxs)(n.ol,{start:"3",children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Analyze specific project types"}),":"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# For Node.js/TypeScript projects\nxfidelity . -a node-fullstack\n\n# For Java microservices\nxfidelity . -a java-microservice\n"})}),"\n",(0,l.jsx)(n.h2,{id:"command-line-options",children:"Command Line Options"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'Options:\n  -d, --dir <directory>                   code directory to analyze\n  -a, --archetype <archetype>             archetype to use (default: "node-fullstack")\n  -c, --configServer <configServer>       config server URL\n  -o, --openaiEnabled <boolean>           enable OpenAI analysis\n  -t, --telemetryCollector <url>          telemetry collector URL\n  -m, --mode <mode>                       \'client\' or \'server\' (default: "client") \n  -p, --port <port>                       server port (default: "8888")\n  -l, --localConfigPath <path>            path to local config\n  -j, --jsonTTL <minutes>                 server cache TTL (default: "10")\n  -e, --extensions <modules...>           space-separated plugin modules\n  -x, --examine                           validate archetype config only\n  -v, --version                           output version number\n  -h, --help                              display help\n'})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Note:"})," Plugins can be loaded in two ways:"]}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Via the ",(0,l.jsx)(n.code,{children:"-e"})," option (CLI-specified plugins)"]}),"\n",(0,l.jsxs)(n.li,{children:["Via the ",(0,l.jsx)(n.code,{children:"plugins"})," array in your archetype configuration"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"OPENAI_API_KEY"}),": Your OpenAI API key"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"OPENAI_MODEL"}),": OpenAI model to use (default: 'gpt-4')"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"XFI_LISTEN_PORT"}),": Config server port"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"CERT_PATH"}),": SSL certificate path"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"NODE_TLS_REJECT_UNAUTHORIZED"}),": Allow self-signed certs"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"XFI_SHARED_SECRET"}),": Shared secret for security"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"XFI_LOG_COLOR"}),": Set to 'false' to disable colored output in logs"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"NOTIFICATIONS_ENABLED"}),": Enable notification system"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"NOTIFICATION_PROVIDERS"}),": Comma-separated list of notification providers to use"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"CODEOWNERS_PATH"}),": Path to CODEOWNERS file (default: .github/CODEOWNERS)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"CODEOWNERS_ENABLED"}),": Enable code owners integration"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"example-commands",children:"Example Commands"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Analyze current directory\nxfidelity .\n\n# Use specific archetype\nxfidelity . -a java-microservice\n\n# Use remote config server\nxfidelity . -c https://config-server.example.com\n\n# Enable OpenAI analysis\nxfidelity . -o true\n\n# Run as config server\nxfidelity -m server -p 9999\n\n# Use local config\nxfidelity . -l /path/to/config\n\n# Load plugins\nxfidelity . -e plugin1 plugin2\n"})}),"\n",(0,l.jsx)(n.h2,{id:"monorepo-structure",children:"Monorepo Structure"}),"\n",(0,l.jsx)(n.p,{children:"X-Fidelity is organized as a monorepo with the following packages:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"x-fidelity-core"})}),": Core analysis engine and utilities"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"x-fidelity-vscode"})}),": VSCode extension for integrated development"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"x-fidelity-cli"})}),": Command-line interface"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"x-fidelity-server"})}),": Configuration server for centralized rule management"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"x-fidelity-plugins"})}),": Built-in plugins (AST, filesystem, dependency analysis, etc.)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"x-fidelity-types"})}),": Shared TypeScript type definitions"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"x-fidelity-democonfig"})}),": Demo configurations and example rules"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"x-fidelity-fixtures"})}),": Test fixtures and example projects"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"development-setup",children:"Development Setup"}),"\n",(0,l.jsx)(n.p,{children:"For contributing to X-Fidelity or extending its functionality:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Clone the repository\ngit clone https://github.com/zotoio/x-fidelity.git\ncd x-fidelity\n\n# Install all dependencies\nyarn install\n\n# Build all packages\nyarn build\n\n# Run tests\nyarn test\n\n# VSCode extension development\nyarn vscode:dev\n\n# Package the VSCode extension\nyarn vscode:package\n"})}),"\n",(0,l.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,l.jsx)(n.h3,{id:"local-configuration",children:"Local Configuration"}),"\n",(0,l.jsxs)(n.p,{children:["Create a ",(0,l.jsx)(n.code,{children:".xfi-config.json"})," file in your project root for project-specific settings:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "sensitiveFileFalsePositives": [\n    "path/to/exclude/file.js"\n  ],\n  "additionalPlugins": [\n    "xfiPluginSimpleExample"\n  ]\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"remote-configuration",children:"Remote Configuration"}),"\n",(0,l.jsx)(n.p,{children:"Use a configuration server for centralized rule management:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Connect to remote config server\nxfidelity . -c https://config-server.example.com\n\n# Run your own config server\nxfidelity -m server -p 8888 -l /path/to/config\n"})}),"\n",(0,l.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,l.jsx)(n.h3,{id:"for-developers",children:"For Developers"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"./vscode-extension/overview",children:"VSCode Extension Guide"})," - Comprehensive development experience"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"./local-config",children:"Local Configuration"})," - Project-specific setup"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"./plugins/overview",children:"Plugin Development"})," - Creating custom plugins"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"for-teams",children:"For Teams"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"./remote-config",children:"Remote Configuration"})," - Centralized rule management"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"./ci-cd/overview",children:"CI/CD Integration"})," - Automated analysis in pipelines"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"./config-server",children:"Config Server Setup"})," - Hosting your own configuration server"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"core-concepts",children:"Core Concepts"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"./archetypes",children:"Archetypes"})," - Project templates and rule sets"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"./rules",children:"Rules"})," - Define your code quality standards"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"./facts",children:"Facts and Operators"})," - Understanding the analysis engine"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var s=i(6540);const l={},r=s.createContext(l);function t(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);