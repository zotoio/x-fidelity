"use strict";(self.webpackChunkx_fidelity_website=self.webpackChunkx_fidelity_website||[]).push([[4596],{6101:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"plugins/best-practices","title":"Plugin Best Practices","description":"This guide outlines best practices for developing x-fidelity plugins.","source":"@site/docs/plugins/best-practices.md","sourceDirName":"plugins","slug":"/plugins/best-practices","permalink":"/x-fidelity/docs/plugins/best-practices","draft":false,"unlisted":false,"editUrl":"https://github.com/zotoio/x-fidelity/edit/main/website/docs/plugins/best-practices.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"docs","previous":{"title":"Plugin Examples","permalink":"/x-fidelity/docs/plugins/plugin-examples"},"next":{"title":"CI/CD Integration Overview","permalink":"/x-fidelity/docs/ci-cd/overview"}}');var l=i(4848),r=i(8453);const t={sidebar_position:4},a="Plugin Best Practices",c={},d=[{value:"Design Principles",id:"design-principles",level:2},{value:"1. Single Responsibility",id:"1-single-responsibility",level:3},{value:"2. Error Handling",id:"2-error-handling",level:3},{value:"3. Performance",id:"3-performance",level:3},{value:"4. Security",id:"4-security",level:3},{value:"Implementation Guidelines",id:"implementation-guidelines",level:2},{value:"1. Naming Conventions",id:"1-naming-conventions",level:3},{value:"2. Documentation",id:"2-documentation",level:3},{value:"3. Testing",id:"3-testing",level:3},{value:"4. Version Management",id:"4-version-management",level:3},{value:"Code Organization",id:"code-organization",level:2},{value:"1. Project Structure",id:"1-project-structure",level:3},{value:"2. Type Definitions",id:"2-type-definitions",level:3},{value:"3. Configuration",id:"3-configuration",level:3},{value:"Integration Guidelines",id:"integration-guidelines",level:2},{value:"1. Dependency Management",id:"1-dependency-management",level:3},{value:"2. Error Propagation",id:"2-error-propagation",level:3},{value:"3. Logging",id:"3-logging",level:3},{value:"Publishing Guidelines",id:"publishing-guidelines",level:2},{value:"1. Package Preparation",id:"1-package-preparation",level:3},{value:"2. Quality Checks",id:"2-quality-checks",level:3},{value:"3. Documentation",id:"3-documentation",level:3},{value:"Usage",id:"usage",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"plugin-best-practices",children:"Plugin Best Practices"})}),"\n",(0,l.jsx)(n.p,{children:"This guide outlines best practices for developing x-fidelity plugins."}),"\n",(0,l.jsx)(n.h2,{id:"design-principles",children:"Design Principles"}),"\n",(0,l.jsx)(n.h3,{id:"1-single-responsibility",children:"1. Single Responsibility"}),"\n",(0,l.jsx)(n.p,{children:"Each plugin should:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Have a clear, focused purpose"}),"\n",(0,l.jsx)(n.li,{children:"Avoid feature overlap with other plugins"}),"\n",(0,l.jsx)(n.li,{children:"Be self-contained"}),"\n",(0,l.jsx)(n.li,{children:"Have minimal dependencies"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"2-error-handling",children:"2. Error Handling"}),"\n",(0,l.jsx)(n.p,{children:"Implement robust error handling:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"onError: (error) => ({\n    message: `Plugin error: ${error.message}`,\n    level: 'warning',\n    details: {\n        stack: error.stack,\n        code: error.code,\n        context: error.context\n    }\n})\n"})}),"\n",(0,l.jsx)(n.h3,{id:"3-performance",children:"3. Performance"}),"\n",(0,l.jsx)(n.p,{children:"Optimize performance:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Cache expensive operations"}),"\n",(0,l.jsx)(n.li,{children:"Use async/await properly"}),"\n",(0,l.jsx)(n.li,{children:"Implement timeouts"}),"\n",(0,l.jsx)(n.li,{children:"Handle rate limits"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"4-security",children:"4. Security"}),"\n",(0,l.jsx)(n.p,{children:"Follow security best practices:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Validate all inputs"}),"\n",(0,l.jsx)(n.li,{children:"Sanitize file paths"}),"\n",(0,l.jsx)(n.li,{children:"Handle sensitive data carefully"}),"\n",(0,l.jsx)(n.li,{children:"Use secure dependencies"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"implementation-guidelines",children:"Implementation Guidelines"}),"\n",(0,l.jsx)(n.h3,{id:"1-naming-conventions",children:"1. Naming Conventions"}),"\n",(0,l.jsx)(n.p,{children:"Follow consistent naming:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Package names: ",(0,l.jsx)(n.code,{children:"xfi-*"})]}),"\n",(0,l.jsxs)(n.li,{children:["Facts: ",(0,l.jsx)(n.code,{children:"customFact"})]}),"\n",(0,l.jsxs)(n.li,{children:["Operators: ",(0,l.jsx)(n.code,{children:"customOperator"})]}),"\n",(0,l.jsxs)(n.li,{children:["Rules: ",(0,l.jsx)(n.code,{children:"customRule-[global|iterative]"})]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"2-documentation",children:"2. Documentation"}),"\n",(0,l.jsx)(n.p,{children:"Include comprehensive documentation:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"README.md"}),"\n",(0,l.jsx)(n.li,{children:"JSDoc comments"}),"\n",(0,l.jsx)(n.li,{children:"Usage examples"}),"\n",(0,l.jsx)(n.li,{children:"API documentation"}),"\n",(0,l.jsx)(n.li,{children:"Changelog"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"3-testing",children:"3. Testing"}),"\n",(0,l.jsx)(n.p,{children:"Write thorough tests:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"describe('plugin', () => {\n    it('should handle valid inputs', async () => {\n        // Test normal operation\n    });\n\n    it('should handle invalid inputs', async () => {\n        // Test error cases\n    });\n\n    it('should handle edge cases', async () => {\n        // Test boundaries\n    });\n});\n"})}),"\n",(0,l.jsx)(n.h3,{id:"4-version-management",children:"4. Version Management"}),"\n",(0,l.jsx)(n.p,{children:"Follow semantic versioning:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MAJOR: Breaking changes"}),"\n",(0,l.jsx)(n.li,{children:"MINOR: New features"}),"\n",(0,l.jsx)(n.li,{children:"PATCH: Bug fixes"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"code-organization",children:"Code Organization"}),"\n",(0,l.jsx)(n.h3,{id:"1-project-structure",children:"1. Project Structure"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"my-plugin/\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 facts/\n\u2502   \u251c\u2500\u2500 operators/\n\u2502   \u2514\u2500\u2500 index.ts\n\u251c\u2500\u2500 test/\n\u251c\u2500\u2500 examples/\n\u2514\u2500\u2500 package.json\n"})}),"\n",(0,l.jsx)(n.h3,{id:"2-type-definitions",children:"2. Type Definitions"}),"\n",(0,l.jsx)(n.p,{children:"Use TypeScript for better type safety:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"interface CustomFact extends FactDefn {\n    name: string;\n    fn: (params: CustomParams) => Promise<CustomResult>;\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"3-configuration",children:"3. Configuration"}),"\n",(0,l.jsx)(n.p,{children:"Make plugins configurable:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"const plugin = {\n    name: 'my-plugin',\n    version: '1.0.0',\n    config: {\n        timeout: 5000,\n        retries: 3\n    }\n};\n"})}),"\n",(0,l.jsx)(n.h2,{id:"integration-guidelines",children:"Integration Guidelines"}),"\n",(0,l.jsx)(n.h3,{id:"1-dependency-management",children:"1. Dependency Management"}),"\n",(0,l.jsx)(n.p,{children:"Handle dependencies properly:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n    "peerDependencies": {\n        "x-fidelity": "^3.0.0"\n    },\n    "devDependencies": {\n        "typescript": "^5.0.0",\n        "jest": "^29.0.0"\n    }\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"2-error-propagation",children:"2. Error Propagation"}),"\n",(0,l.jsx)(n.p,{children:"Propagate errors appropriately:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"try {\n    // Plugin operation\n} catch (error) {\n    throw new PluginError({\n        message: 'Operation failed',\n        level: 'error',\n        details: error\n    });\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"3-logging",children:"3. Logging"}),"\n",(0,l.jsx)(n.p,{children:"Use consistent logging:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"import { logger } from 'x-fidelity';\n\nlogger.info('Plugin operation started');\nlogger.error('Plugin operation failed', error);\n"})}),"\n",(0,l.jsx)(n.h2,{id:"publishing-guidelines",children:"Publishing Guidelines"}),"\n",(0,l.jsx)(n.h3,{id:"1-package-preparation",children:"1. Package Preparation"}),"\n",(0,l.jsx)(n.p,{children:"Prepare for publishing:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n    "name": "xfi-my-plugin",\n    "version": "1.0.0",\n    "main": "dist/index.js",\n    "types": "dist/index.d.ts",\n    "files": [\n        "dist",\n        "README.md",\n        "LICENSE"\n    ]\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"2-quality-checks",children:"2. Quality Checks"}),"\n",(0,l.jsx)(n.p,{children:"Run quality checks:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Lint code\nyarn lint\n\n# Run tests\nyarn test\n\n# Build package\nyarn build\n\n# Check package contents\nyarn pack\n"})}),"\n",(0,l.jsx)(n.h3,{id:"3-documentation",children:"3. Documentation"}),"\n",(0,l.jsx)(n.p,{children:"Include usage documentation:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-markdown",children:"## Installation\n```bash\nyarn add xfi-my-plugin\n"})}),"\n",(0,l.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"xfidelity . -e xfi-my-plugin\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\n## Common Pitfalls\n\n1. **Tight Coupling**: Avoid depending on internal x-fidelity implementation details\n2. **Poor Error Handling**: Always handle errors appropriately\n3. **Missing Documentation**: Document all features and configurations\n4. **Insufficient Testing**: Test all functionality including edge cases\n5. **Version Conflicts**: Manage peer dependencies correctly\n\n## Next Steps\n\n- Review the [Plugin Examples](plugin-examples)\n- Create your own plugin\n- Contribute to existing plugins\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var s=i(6540);const l={},r=s.createContext(l);function t(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);