"use strict";(self.webpackChunkx_fidelity_website=self.webpackChunkx_fidelity_website||[]).push([[6322],{8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(6540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}},9547:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"result-files-and-conventions","title":"Result Files & Conventions","description":"X-Fidelity writes analysis outputs and logs to a dedicated directory in your workspace. This page documents the conventions and guarantees around those files.","source":"@site/docs/result-files-and-conventions.md","sourceDirName":".","slug":"/result-files-and-conventions","permalink":"/x-fidelity/docs/result-files-and-conventions","draft":false,"unlisted":false,"editUrl":"https://github.com/zotoio/x-fidelity/edit/main/website/docs/result-files-and-conventions.md","tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"sidebar_position":12}}');var t=s(4848),r=s(8453);const l={sidebar_position:12},o="Result Files & Conventions",d={},c=[{value:"Directory",id:"directory",level:2},{value:"Files",id:"files",level:2},{value:"Guarantees",id:"guarantees",level:2},{value:"Best Practices",id:"best-practices",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"result-files--conventions",children:"Result Files & Conventions"})}),"\n",(0,t.jsx)(n.p,{children:"X-Fidelity writes analysis outputs and logs to a dedicated directory in your workspace. This page documents the conventions and guarantees around those files."}),"\n",(0,t.jsx)(n.h2,{id:"directory",children:"Directory"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Location: ",(0,t.jsx)(n.code,{children:".xfiResults/"})," at your workspace root"]}),"\n",(0,t.jsxs)(n.li,{children:["Git ignore: The CLI will ensure ",(0,t.jsx)(n.code,{children:".xfiResults/"})," is added to ",(0,t.jsx)(n.code,{children:".gitignore"})," where possible"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"files",children:"Files"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"XFI_RESULT.json"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Always present after analysis"}),"\n",(0,t.jsx)(n.li,{children:"Continuously updated with the latest results"}),"\n",(0,t.jsx)(n.li,{children:"Never deleted by cleanup routines"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"xfi-report-{timestamp}.json"})," and ",(0,t.jsx)(n.code,{children:"xfi-report-{timestamp}.md"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Timestamped reports for history and sharing"}),"\n",(0,t.jsx)(n.li,{children:"Subject to retention/cleanup policies"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"structured-output.json"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Written when ",(0,t.jsx)(n.code,{children:"--output-format json"})," is used without ",(0,t.jsx)(n.code,{children:"--output-file"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"x-fidelity.log"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Created when running the CLI with ",(0,t.jsx)(n.code,{children:"--enable-file-logging"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"guarantees",children:"Guarantees"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"XFI_RESULT.json"})," is treated as the canonical latest results file and is never removed by cleanup."]}),"\n",(0,t.jsx)(n.li,{children:"Timestamped reports are created for each run when reporting is enabled and may be cleaned up based on retention."}),"\n",(0,t.jsxs)(n.li,{children:["The VSCode extension reads ",(0,t.jsx)(n.code,{children:"XFI_RESULT.json"})," directly and may also display Markdown reports if available."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Do not commit ",(0,t.jsx)(n.code,{children:".xfiResults/"})," to version control"]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"XFI_RESULT.json"})," as the integration point for automation"]}),"\n",(0,t.jsx)(n.li,{children:"Configure retention in the VSCode extension to manage historical reports"}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"--output-file"})," when you need results in a specific path outside ",(0,t.jsx)(n.code,{children:".xfiResults/"})]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);