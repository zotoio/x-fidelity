"use strict";(self.webpackChunkx_fidelity_website=self.webpackChunkx_fidelity_website||[]).push([[9113],{3201:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"cli-reference","title":"CLI Reference","description":"The X-Fidelity CLI provides powerful command-line analysis capabilities with performance optimizations, caching, and multiple output formats.","source":"@site/docs/cli-reference.md","sourceDirName":".","slug":"/cli-reference","permalink":"/x-fidelity/docs/cli-reference","draft":false,"unlisted":false,"editUrl":"https://github.com/zotoio/x-fidelity/edit/main/website/docs/cli-reference.md","tags":[],"version":"current","frontMatter":{}}');var l=i(4848),r=i(8453);const t={},o="CLI Reference",a={},c=[{value:"Installation",id:"installation",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Command Line Options",id:"command-line-options",level:2},{value:"Basic Options",id:"basic-options",level:3},{value:"Configuration Options",id:"configuration-options",level:3},{value:"Analysis Options",id:"analysis-options",level:3},{value:"Output Options",id:"output-options",level:3},{value:"Performance Options",id:"performance-options",level:3},{value:"Server Mode Options",id:"server-mode-options",level:3},{value:"Telemetry Options",id:"telemetry-options",level:3},{value:"Examples",id:"examples",level:2},{value:"Basic Analysis",id:"basic-analysis",level:3},{value:"Advanced Analysis",id:"advanced-analysis",level:3},{value:"Output Formats",id:"output-formats",level:3},{value:"Performance Optimization",id:"performance-optimization",level:3},{value:"Configuration Server",id:"configuration-server",level:3},{value:"Output Structure",id:"output-structure",level:2},{value:"Human Format",id:"human-format",level:3},{value:"JSON Format",id:"json-format",level:3},{value:"Exit Codes",id:"exit-codes",level:2},{value:"Environment Variables",id:"environment-variables",level:2},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Large Codebases",id:"large-codebases",level:3},{value:"CI/CD Optimization",id:"cicd-optimization",level:3},{value:"Memory Usage",id:"memory-usage",level:3},{value:"Integration Examples",id:"integration-examples",level:2},{value:"GitHub Actions",id:"github-actions",level:3},{value:"Shell Scripts",id:"shell-scripts",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Debug Mode",id:"debug-mode",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"cli-reference",children:"CLI Reference"})}),"\n",(0,l.jsx)(n.p,{children:"The X-Fidelity CLI provides powerful command-line analysis capabilities with performance optimizations, caching, and multiple output formats."}),"\n",(0,l.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'# Install globally\nyarn global add x-fidelity\nexport PATH="$PATH:$(yarn global bin)"\n\n# Or use with npx\nnpx x-fidelity --help\n'})}),"\n",(0,l.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Analyze current directory\nxfidelity\n\n# Analyze specific directory\nxfidelity /path/to/project\n\n# Use specific archetype\nxfidelity . --archetype react-spa\n\n# Output JSON format\nxfidelity . --output-format json\n\n# Save output to file\nxfidelity . --output-format json --output-file results.json\n"})}),"\n",(0,l.jsx)(n.h2,{id:"command-line-options",children:"Command Line Options"}),"\n",(0,l.jsx)(n.h3,{id:"basic-options",children:"Basic Options"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"[directory]"})})," - Path to repository root (default: current directory)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"-d, --dir <path>"})})," - Path to repository root (overrides positional argument)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"-a, --archetype <archetype>"})})," - Analysis archetype (default: 'node-fullstack')"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"-v, --version"})})," - Display version number"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"-h, --help"})})," - Show help information"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"-c, --configServer <url>"})})," - Remote config server URL for fetching configurations"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"-l, --localConfigPath <path>"})})," - Path to local archetype config and rules directory"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"analysis-options",children:"Analysis Options"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"-o, --openaiEnabled"})})," - Enable OpenAI-powered code analysis"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"-e, --extraPlugins <modules...>"})})," - Space-separated list of npm modules to load as plugins"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"-x, --examine"})})," - Validate archetype configuration only (no analysis)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"-z, --zap <files>"})})," - JSON array of specific files to analyze"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"output-options",children:"Output Options"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"--output-format <format>"})})," - Output format: 'human' (default) or 'json'"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"--output-file <path>"})})," - Write structured output to file (works with json format)"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"performance-options",children:"Performance Options"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"--file-cache-ttl <minutes>"})})," - File modification cache TTL in minutes (default: 60)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"--disableTreeSitterWorker"})})," - Disable TreeSitter worker threads for testing"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"server-mode-options",children:"Server Mode Options"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"-m, --mode <mode>"})})," - Run mode: 'cli' (default), 'vscode', 'server', or 'hook' (note: 'client' is deprecated; use 'cli')"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"-p, --port <number>"})})," - Server port when running in server mode (default: 8888)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"-j, --jsonTTL <minutes>"})})," - Server JSON cache TTL in minutes (default: 10)"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"telemetry-options",children:"Telemetry Options"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"-t, --telemetryCollector <url>"})})," - URL for sending usage analytics"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,l.jsx)(n.h3,{id:"basic-analysis",children:"Basic Analysis"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Simple analysis with default settings\nxfidelity .\n\n# Analyze with specific archetype\nxfidelity . --archetype java-microservice\n\n# Analyze specific directory\nxfidelity /workspace/my-project\n"})}),"\n",(0,l.jsx)(n.h3,{id:"advanced-analysis",children:"Advanced Analysis"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'# Enable OpenAI analysis\nxfidelity . --openaiEnabled --archetype node-fullstack\n\n# Use remote configuration\nxfidelity . --configServer http://config-server:8888\n\n# Use a GitHub config location\nxfidelity . --githubConfigLocation https://github.com/org/repo/tree/main/xfi-config\n\n# Analyze specific files only\nxfidelity . --zap \'["src/index.js", "src/app.js"]\'\n\n# Use additional plugins\nxfidelity . --extraPlugins custom-plugin another-plugin\n'})}),"\n",(0,l.jsx)(n.h3,{id:"output-formats",children:"Output Formats"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Human-readable output (default)\nxfidelity . --output-format human\n\n# JSON output for programmatic consumption\nxfidelity . --output-format json\n\n# Save JSON output to file\nxfidelity . --output-format json --output-file analysis-results.json\n\n# If no output file is specified with --output-format json, results are also written to .xfiResults/structured-output.json\n\n# Pretty-print JSON to console\nxfidelity . --output-format json | jq .\n"})}),"\n",(0,l.jsx)(n.h3,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Increase file cache TTL for large projects\nxfidelity . --file-cache-ttl 120\n\n# Enable TreeSitter worker (disabled by default in CLI)\nxfidelity . --enable-tree-sitter-worker\n\n# Analyze only specific files for faster feedback\nxfidelity . --zap '[\"src/critical-file.js\"]'\n"})}),"\n",(0,l.jsx)(n.h3,{id:"configuration-server",children:"Configuration Server"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Start configuration server\nxfidelity --mode server --port 8888\n\n# Use configuration server\nxfidelity . --configServer http://localhost:8888\n\n# Server with custom cache TTL\nxfidelity --mode server --port 8888 --jsonTTL 30\n"})}),"\n",(0,l.jsx)(n.h2,{id:"output-structure",children:"Output Structure"}),"\n",(0,l.jsx)(n.h3,{id:"human-format",children:"Human Format"}),"\n",(0,l.jsx)(n.p,{children:"The default human-readable output includes:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Analysis summary with issue counts"}),"\n",(0,l.jsx)(n.li,{children:"Performance metrics and timing"}),"\n",(0,l.jsx)(n.li,{children:"Detailed issue descriptions with file locations"}),"\n",(0,l.jsx)(n.li,{children:"Rule information and severity levels"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"json-format",children:"JSON Format"}),"\n",(0,l.jsxs)(n.p,{children:["The JSON output provides structured data (note: ",(0,l.jsx)(n.code,{children:"telemetryData"})," is nested under ",(0,l.jsx)(n.code,{children:"XFI_RESULT"}),"):"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "XFI_RESULT": {\n    "totalIssues": 5,\n    "warningCount": 3,\n    "errorCount": 2,\n    "fatalityCount": 0,\n    "exemptCount": 1,\n    "filesAnalyzed": 42,\n    "durationSeconds": 2.5,\n    "issueDetails": [\n      {\n        "filePath": "/project/src/app.js",\n        "errors": [\n          {\n            "ruleFailure": "functionComplexity-iterative",\n            "level": "warning",\n            "details": {\n              "message": "Function complexity exceeds threshold",\n              "lineNumber": 15,\n              "columnNumber": 8,\n              "details": {\n                "complexities": [\n                  {\n                    "metrics": {\n                      "location": {\n                        "startLine": 15,\n                        "startColumn": 8,\n                        "endLine": 25,\n                        "endColumn": 1\n                      },\n                      "complexity": 12,\n                      "threshold": 10\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      }\n    ],\n    "telemetryData": {\n      "performanceMetrics": {\n        "totalDuration": 2500,\n        "pluginTiming": {},\n        "memoryUsage": 45.2\n      }\n    },\n    "timestamp": "2024-12-07T10:30:00Z",\n    "version": "3.28.0"\n  }\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"exit-codes",children:"Exit Codes"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"0"})," - Analysis completed successfully with no fatal errors"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"1"})," - Analysis failed due to configuration or runtime errors"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"2"})," - Analysis completed but found fatal-level issues"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"3"})," - Invalid command line arguments"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"XFI_LOG_LEVEL"})})," - Set logging level (trace, debug, info, warn, error, fatal)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"XFI_CONFIG_PATH"})})," - Override path for configuration files"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"XFI_LOG_COLORS"})})," - Set to ",(0,l.jsx)(n.code,{children:"false"})," to disable colored CLI output (used when CLI is spawned by the VSCode extension)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"NODE_ENV"})})," - Affects default logging behavior"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,l.jsx)(n.h3,{id:"large-codebases",children:"Large Codebases"}),"\n",(0,l.jsx)(n.p,{children:"For large projects (>1000 files):"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Use ",(0,l.jsx)(n.code,{children:"--file-cache-ttl"})," to cache file metadata longer"]}),"\n",(0,l.jsxs)(n.li,{children:["Consider ",(0,l.jsx)(n.code,{children:"--zap"})," for targeted analysis"]}),"\n",(0,l.jsx)(n.li,{children:"Use remote configuration servers to avoid config parsing overhead"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"cicd-optimization",children:"CI/CD Optimization"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'# Fast CI analysis\nxfidelity . --output-format json --file-cache-ttl 5\n\n# Specific file analysis for pull requests\nxfidelity . --zap \'["changed-file1.js", "changed-file2.js"]\'\n'})}),"\n",(0,l.jsx)(n.h3,{id:"memory-usage",children:"Memory Usage"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"TreeSitter worker threads use additional memory"}),"\n",(0,l.jsxs)(n.li,{children:["Disable with ",(0,l.jsx)(n.code,{children:"--disableTreeSitterWorker"})," if memory constrained"]}),"\n",(0,l.jsx)(n.li,{children:"File caching reduces I/O but increases memory usage"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"integration-examples",children:"Integration Examples"}),"\n",(0,l.jsx)(n.h3,{id:"github-actions",children:"GitHub Actions"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"- name: Run X-Fidelity Analysis\n  run: |\n    npx x-fidelity . --output-format json --output-file xfi-results.json\n    cat xfi-results.json | jq '.XFI_RESULT.totalIssues'\n"})}),"\n",(0,l.jsx)(n.h3,{id:"shell-scripts",children:"Shell Scripts"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n# Run analysis and check for fatal errors\nxfidelity . --output-format json > results.json\nFATAL_COUNT=$(cat results.json | jq \'.XFI_RESULT.fatalityCount\')\n\nif [ "$FATAL_COUNT" -gt 0 ]; then\n    echo "Fatal issues found: $FATAL_COUNT"\n    exit 1\nfi\n'})}),"\n",(0,l.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,l.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Permission Errors:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Ensure proper permissions\nchmod +x $(which xfidelity)\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Memory Issues:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'# Increase Node.js memory limit\nNODE_OPTIONS="--max-old-space-size=4096" xfidelity .\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Plugin Loading Errors:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Check plugin installation\nnpm list custom-plugin\nxfidelity . --extraPlugins custom-plugin\n"})}),"\n",(0,l.jsx)(n.h3,{id:"debug-mode",children:"Debug Mode"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Enable verbose logging\nXFI_LOG_LEVEL=debug xfidelity .\n\n# Trace plugin loading\nXFI_LOG_LEVEL=trace xfidelity . --examine\n\n# Enable file logging to .xfiResults/x-fidelity.log\nxfidelity . --enable-file-logging\n"})}),"\n",(0,l.jsxs)(n.p,{children:["For more information, see the ",(0,l.jsx)(n.a,{href:"/x-fidelity/docs/quickstart",children:"Quickstart"})," and ",(0,l.jsx)(n.a,{href:"/x-fidelity/docs/archetypes",children:"Configuration Reference"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var s=i(6540);const l={},r=s.createContext(l);function t(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);