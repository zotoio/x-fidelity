"use strict";(self.webpackChunkx_fidelity_website=self.webpackChunkx_fidelity_website||[]).push([[787],{7521:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"plugins/plugin-examples","title":"Plugin Examples","description":"This guide provides real-world examples of x-fidelity plugins.","source":"@site/docs/plugins/plugin-examples.md","sourceDirName":"plugins","slug":"/plugins/plugin-examples","permalink":"/x-fidelity/docs/plugins/plugin-examples","draft":false,"unlisted":false,"editUrl":"https://github.com/zotoio/x-fidelity/edit/main/website/docs/plugins/plugin-examples.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docs","previous":{"title":"Creating Plugins","permalink":"/x-fidelity/docs/plugins/creating-plugins"},"next":{"title":"Plugin Best Practices","permalink":"/x-fidelity/docs/plugins/best-practices"}}');var s=i(4848),t=i(8453);const l={sidebar_position:3},a="Plugin Examples",o={},c=[{value:"Remote String Validator Plugin",id:"remote-string-validator-plugin",level:2},{value:"Simple Example Plugin",id:"simple-example-plugin",level:2},{value:"Error Demo Plugin",id:"error-demo-plugin",level:2},{value:"Testing Examples",id:"testing-examples",level:2},{value:"Fact Testing",id:"fact-testing",level:3},{value:"Operator Testing",id:"operator-testing",level:3},{value:"Error Handler Testing",id:"error-handler-testing",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"plugin-examples",children:"Plugin Examples"})}),"\n",(0,s.jsx)(n.p,{children:"This guide provides real-world examples of x-fidelity plugins."}),"\n",(0,s.jsx)(n.h2,{id:"remote-string-validator-plugin",children:"Remote String Validator Plugin"}),"\n",(0,s.jsx)(n.p,{children:"The Remote String Validator plugin demonstrates how to integrate with external APIs:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const plugin = {\n    name: 'xfiPluginRemoteStringValidator',\n    version: '1.0.0',\n    facts: [{\n        name: 'remoteSubstringValidation',\n        fn: async (params) => {\n            // Extract strings using regex pattern\n            const matches = extractMatches(params.pattern);\n            // Validate each match against remote API\n            return validateMatches(matches, params.validationParams);\n        }\n    }],\n    operators: [{\n        name: 'invalidRemoteValidation',\n        fn: (factValue, params) => {\n            // Return true if validation failed (indicating rule failure)\n            return !factValue.isValid;\n        }\n    }]\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:"Example usage in a rule:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "fact": "remoteSubstringValidation",\n    "params": {\n        "pattern": "\\"systemId\\":[\\\\s]*\\"([a-z]*)\\"",\n        "validationParams": {\n            "url": "http://validator.example.com/check",\n            "method": "POST",\n            "headers": {\n                "Content-Type": "application/json"\n            },\n            "body": {\n                "value": "#MATCH#"\n            },\n            "checkJsonPath": "$.valid"\n        },\n        "resultFact": "validationResult"\n    },\n    "operator": "invalidRemoteValidation",\n    "value": true\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"simple-example-plugin",children:"Simple Example Plugin"}),"\n",(0,s.jsx)(n.p,{children:"The Simple Example plugin demonstrates basic plugin structure:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const plugin = {\n    name: 'xfiPluginSimpleExample',\n    version: '1.0.0',\n    facts: [{\n        name: 'customFact',\n        fn: async () => ({ result: 'custom fact data' })\n    }],\n    operators: [{\n        name: 'customOperator',\n        fn: (factValue, expectedValue) => factValue === expectedValue\n    }]\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:"Example usage:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "name": "custom-plugin-rule",\n    "conditions": {\n        "all": [\n            {\n                "fact": "customFact",\n                "operator": "customOperator",\n                "value": "custom fact data"\n            }\n        ]\n    },\n    "event": {\n        "type": "warning",\n        "params": {\n            "message": "Custom rule triggered"\n        }\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"error-demo-plugin",children:"Error Demo Plugin"}),"\n",(0,s.jsx)(n.p,{children:"Shows error handling implementation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const plugin = {\n    name: 'xfiPluginErrorDemo',\n    version: '1.0.0',\n    facts: [{\n        name: 'errorFact',\n        fn: async () => {\n            throw new Error('Simulated error');\n        }\n    }],\n    onError: (error) => ({\n        message: `Error demo: ${error.message}`,\n        level: 'warning',\n        details: error.stack\n    })\n};\n"})}),"\n",(0,s.jsx)(n.h2,{id:"testing-examples",children:"Testing Examples"}),"\n",(0,s.jsx)(n.h3,{id:"fact-testing",children:"Fact Testing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"describe('remoteSubstringValidation', () => {\n    it('should validate extracted strings', async () => {\n        const params = {\n            pattern: 'test-(\\\\d+)',\n            validationParams: {\n                url: 'http://api.example.com/validate'\n            }\n        };\n        \n        const result = await plugin.facts[0].fn(params);\n        expect(result.isValid).toBe(true);\n    });\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"operator-testing",children:"Operator Testing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"describe('invalidRemoteValidation', () => {\n    it('should handle validation results', () => {\n        const factValue = { isValid: false };\n        const result = plugin.operators[0].fn(factValue);\n        expect(result).toBe(true);\n    });\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"error-handler-testing",children:"Error Handler Testing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"describe('error handling', () => {\n    it('should format errors correctly', () => {\n        const error = new Error('Test error');\n        const result = plugin.onError(error);\n        expect(result.level).toBe('warning');\n        expect(result.message).toContain('Test error');\n    });\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Error Handling"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Implement comprehensive error handling"}),"\n",(0,s.jsx)(n.li,{children:"Use appropriate error levels"}),"\n",(0,s.jsx)(n.li,{children:"Include useful error details"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Testing"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Write unit tests for facts and operators"}),"\n",(0,s.jsx)(n.li,{children:"Test error handling"}),"\n",(0,s.jsx)(n.li,{children:"Include integration tests"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Documentation"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Document plugin features"}),"\n",(0,s.jsx)(n.li,{children:"Include usage examples"}),"\n",(0,s.jsx)(n.li,{children:"Explain configuration options"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Security"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Validate inputs"}),"\n",(0,s.jsx)(n.li,{children:"Handle sensitive data carefully"}),"\n",(0,s.jsx)(n.li,{children:"Follow security best practices"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Learn about ",(0,s.jsx)(n.a,{href:"best-practices",children:"Plugin Best Practices"})]}),"\n",(0,s.jsx)(n.li,{children:"Create your own plugin"}),"\n",(0,s.jsx)(n.li,{children:"Contribute to existing plugins"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var r=i(6540);const s={},t=r.createContext(s);function l(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);