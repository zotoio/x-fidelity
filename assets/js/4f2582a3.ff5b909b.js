"use strict";(self.webpackChunkx_fidelity_website=self.webpackChunkx_fidelity_website||[]).push([[5208],{5767:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"archetypes","title":"Archetypes","description":"Archetypes are predefined configuration templates that define how x-fidelity should analyze different types of projects.","source":"@site/docs/archetypes.md","sourceDirName":".","slug":"/archetypes","permalink":"/x-fidelity/docs/archetypes","draft":false,"unlisted":false,"editUrl":"https://github.com/zotoio/x-fidelity/edit/main/website/docs/archetypes.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"docs","previous":{"title":"x-fidelity-core","permalink":"/x-fidelity/docs/packages/core"},"next":{"title":"Rules","permalink":"/x-fidelity/docs/rules"}}');var r=s(4848),t=s(8453);const l={sidebar_position:4},c="Archetypes",d={},a=[{value:"What is an Archetype?",id:"what-is-an-archetype",level:2},{value:"Archetype Structure",id:"archetype-structure",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Rules",id:"rules",level:3},{value:"Operators",id:"operators",level:3},{value:"Facts",id:"facts",level:3},{value:"Config Section",id:"config-section",level:3},{value:"minimumDependencyVersions",id:"minimumdependencyversions",level:4},{value:"standardStructure",id:"standardstructure",level:4},{value:"blacklistPatterns",id:"blacklistpatterns",level:4},{value:"whitelistPatterns",id:"whitelistpatterns",level:4},{value:"Creating Custom Archetypes",id:"creating-custom-archetypes",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Next Steps",id:"next-steps",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"archetypes",children:"Archetypes"})}),"\n",(0,r.jsx)(n.p,{children:"Archetypes are predefined configuration templates that define how x-fidelity should analyze different types of projects."}),"\n",(0,r.jsx)(n.h2,{id:"what-is-an-archetype",children:"What is an Archetype?"}),"\n",(0,r.jsx)(n.p,{children:"An archetype defines:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Rules to apply"}),"\n",(0,r.jsx)(n.li,{children:"Required directory structure"}),"\n",(0,r.jsx)(n.li,{children:"Minimum dependency versions"}),"\n",(0,r.jsx)(n.li,{children:"File patterns to analyze"}),"\n",(0,r.jsx)(n.li,{children:"Custom operators and facts to use"}),"\n",(0,r.jsx)(n.li,{children:"Plugins to load"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"archetype-structure",children:"Archetype Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "name": "node-fullstack",\n    "rules": [\n        "sensitiveLogging-iterative",\n        "outdatedFramework-global",\n        "noDatabases-iterative"\n    ],\n    "operators": [\n        "fileContains",\n        "outdatedFramework",\n        "nonStandardDirectoryStructure"\n    ],\n    "facts": [\n        "repoFilesystemFacts",\n        "repoDependencyFacts"\n    ],\n    "plugins": [\n        "xfiPluginRequiredFiles",\n        "xfiPluginRemoteStringValidator"\n    ],\n    "config": {\n        "minimumDependencyVersions": {\n            "react": ">=17.0.0",\n            "typescript": "^4.0.0"\n        },\n        "standardStructure": {\n            "src": {\n                "components": null,\n                "utils": null\n            }\n        },\n        "blacklistPatterns": [\n            ".*\\\\/\\\\..*",\n            ".*\\\\.(log|lock)$",\n            ".*\\\\/(dist|build|node_modules)(\\\\/.*|$)"\n        ],\n        "whitelistPatterns": [\n            ".*\\\\.(ts|tsx|js|jsx)$"\n        ]\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,r.jsx)(n.h3,{id:"rules",children:"Rules"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"rules"})," array lists all rules that should be applied to projects using this archetype. Rules can be:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Global"}),": Applied once per repository (suffix ",(0,r.jsx)(n.code,{children:"-global"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Iterative"}),": Applied to each matching file (suffix ",(0,r.jsx)(n.code,{children:"-iterative"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"operators",children:"Operators"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"operators"})," array defines which operators are available for use in rules. Common operators include:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fileContains"}),": Check file contents for patterns"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"outdatedFramework"}),": Check dependency versions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"nonStandardDirectoryStructure"}),": Validate directory structure"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"facts",children:"Facts"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"facts"})," array specifies which fact providers to use. Built-in facts include:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"repoFilesystemFacts"}),": File system information"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"repoDependencyFacts"}),": Dependency version data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"openaiAnalysisFacts"}),": AI-powered analysis results"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"config-section",children:"Config Section"}),"\n",(0,r.jsx)(n.h4,{id:"minimumdependencyversions",children:"minimumDependencyVersions"}),"\n",(0,r.jsx)(n.p,{children:"Defines minimum required versions for dependencies using semver ranges:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"minimumDependencyVersions": {\n    "react": ">=17.0.0",\n    "typescript": "^4.0.0"\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"standardstructure",children:"standardStructure"}),"\n",(0,r.jsx)(n.p,{children:"Defines the expected directory structure:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"standardStructure": {\n    "src": {\n        "components": null,\n        "utils": null\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"null"})," for leaf directories"]}),"\n",(0,r.jsx)(n.li,{children:"Nested objects for subdirectories"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"blacklistpatterns",children:"blacklistPatterns"}),"\n",(0,r.jsx)(n.p,{children:"Array of regex patterns for files to exclude:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"blacklistPatterns": [\n    ".*\\\\/\\\\..*",  // Hidden files\n    ".*\\\\.(log|lock)$",  // Log and lock files\n    ".*\\\\/(dist|build|node_modules)(\\\\/.*|$)"  // Build directories\n]\n'})}),"\n",(0,r.jsx)(n.h4,{id:"whitelistpatterns",children:"whitelistPatterns"}),"\n",(0,r.jsx)(n.p,{children:"Array of regex patterns for files to include:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"whitelistPatterns": [\n    ".*\\\\.(ts|tsx|js|jsx)$"  // TypeScript and JavaScript files\n]\n'})}),"\n",(0,r.jsx)(n.h2,{id:"creating-custom-archetypes",children:"Creating Custom Archetypes"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Create a new JSON file named ",(0,r.jsx)(n.code,{children:"your-archetype.json"})]}),"\n",(0,r.jsx)(n.li,{children:"Define required sections: name, rules, operators, facts, and config"}),"\n",(0,r.jsx)(n.li,{children:"Place in your local config directory or on your config server"}),"\n",(0,r.jsxs)(n.li,{children:["Use with the ",(0,r.jsx)(n.code,{children:"-a"})," or ",(0,r.jsx)(n.code,{children:"--archetype"})," option:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"xfidelity . -a your-archetype\n"})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Naming Convention"}),": Use descriptive names like ",(0,r.jsx)(n.code,{children:"node-fullstack"})," or ",(0,r.jsx)(n.code,{children:"java-microservice"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rule Selection"}),": Include both global and iterative rules for comprehensive checks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dependency Management"}),": Keep minimum versions up to date with security patches"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"File Patterns"}),": Be specific with whitelist/blacklist patterns"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Directory Structure"}),": Define structures that match your organization's standards"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Learn about ",(0,r.jsx)(n.a,{href:"rules",children:"Rules"})]}),"\n",(0,r.jsxs)(n.li,{children:["Explore ",(0,r.jsx)(n.a,{href:"operators",children:"Operators"})]}),"\n",(0,r.jsxs)(n.li,{children:["Understand ",(0,r.jsx)(n.a,{href:"facts",children:"Facts"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var i=s(6540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);