name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  NODE_VERSION: '22.16.0'

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      vscode: ${{ steps.filter.outputs.vscode }}
      cli: ${{ steps.filter.outputs.cli }}
      core: ${{ steps.filter.outputs.core }}
      website: ${{ steps.filter.outputs.website }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            vscode:
              - 'packages/x-fidelity-vscode/**'
              - 'packages/x-fidelity-core/**'
              - 'packages/x-fidelity-types/**'
              - 'packages/x-fidelity-plugins/**'
            cli:
              - 'packages/x-fidelity-cli/**'
              - 'packages/x-fidelity-core/**'
              - 'packages/x-fidelity-types/**'
              - 'packages/x-fidelity-plugins/**'
            core:
              - 'packages/x-fidelity-core/**'
              - 'packages/x-fidelity-types/**'
              - 'packages/x-fidelity-plugins/**'
            website:
              - 'website/**'

  build-and-test:
    runs-on: ubuntu-latest
    needs: changes
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      # - name: Setup Turborepo Remote Cache
      #   uses: dtinth/setup-github-actions-caching-for-turbo@v1

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build all packages
        run: yarn build

      - name: Lint
        run: yarn lint

      - name: Type check
        run: yarn check-types

      - name: Run unit tests with coverage
        run: yarn test:coverage

      - name: Generate unified coverage report
        run: yarn coverage:merge && yarn coverage:report

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Coverage check
        run: yarn coverage:check

  integration-tests:
    needs: [build-and-test, changes]
    if: needs.changes.outputs.cli == 'true' || needs.changes.outputs.vscode == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      # - name: Setup Turborepo Remote Cache
      #   uses: dtinth/setup-github-actions-caching-for-turbo@v1

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Setup Xvfb
        run: sudo apt-get update && sudo apt-get install -y xvfb

      - name: Build all packages
        run: yarn build

      - name: Run CLI integration tests
        if: needs.changes.outputs.cli == 'true'
        run: yarn workspace x-fidelity test:integration

      - name: Run VSCode integration tests
        if: needs.changes.outputs.vscode == 'true'
        run: xvfb-run -a yarn workspace x-fidelity-vscode test:integration

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: Run security audit
        run: yarn security-audit

  website-build:
    needs: [changes]
    if: needs.changes.outputs.website == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build website
        run: yarn website:build


