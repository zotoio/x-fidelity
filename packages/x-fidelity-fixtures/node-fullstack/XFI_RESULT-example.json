{
  "XFI_RESULT": {
    "repoXFIConfig": {
      "sensitiveFileFalsePositives": [
        "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/fixtures/example-config.js"
      ],
      "additionalPlugins": [
        "xfiPluginSimpleExample"
      ],
      "additionalFacts": [
        "customFact"
      ],
      "additionalOperators": [
        "customOperator"
      ],
      "additionalRules": [
        {
          "name": "fixtures-custom-rule",
          "conditions": {
            "all": [
              {
                "fact": "fileData",
                "path": "$.fileName",
                "operator": "equal",
                "value": "REPO_GLOBAL_CHECK"
              },
              {
                "fact": "customFact",
                "operator": "customOperator",
                "value": "custom fact data"
              }
            ]
          },
          "event": {
            "type": "warning",
            "params": {
              "message": "Custom rule detected in fixtures - this tests plugin functionality",
              "details": {
                "fact": "customFact"
              }
            }
          }
        }
      ]
    },
    "issueDetails": [
      {
        "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/README.md",
        "errors": [
          {
            "ruleFailure": "noDatabases-iterative",
            "level": "exempt",
            "details": {
              "message": "code must not directly call databases",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "repoFileAnalysis",
                  "operator": "fileContains",
                  "value": true,
                  "params": {
                    "checkPattern": [
                      "[\\s\\'\\\"\\.](oracle)[\\s\\'\\\"\\.]",
                      "[\\s\\'\\\"\\.](postgres)[\\s\\'\\\"\\.]",
                      "[\\s\\'\\\"\\.](mongodb)[\\s\\'\\\"\\.]"
                    ],
                    "resultFact": "fileResultsDB"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/README.md",
              "fileName": "README.md",
              "details": [
                {
                  "match": "[\\s\\'\\\"\\.](mongodb)[\\s\\'\\\"\\.]",
                  "lineNumber": 21,
                  "line": "...se.js` (oracle, postgres, mongodb patterns)"
                }
              ]
            }
          }
        ]
      },
      {
        "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/AccessibilityIssues.tsx",
        "errors": [
          {
            "ruleFailure": "codeRhythm-iterative",
            "level": "warning",
            "details": {
              "message": "Code structure analysis suggests potential readability issues.",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "codeRhythm",
                  "operator": "codeRhythmComplexity",
                  "value": {
                    "consistency": 0.6,
                    "complexity": 0.7,
                    "readability": 0.5
                  },
                  "params": {
                    "resultFact": "codeRhythmResult"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/AccessibilityIssues.tsx",
              "fileName": "AccessibilityIssues.tsx",
              "details": {
                "consistency": 0.4,
                "complexity": 0.3,
                "readability": 0.7
              }
            }
          }
        ]
      },
      {
        "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/AnotherLegacyComponent.tsx",
        "errors": [
          {
            "ruleFailure": "codeRhythm-iterative",
            "level": "warning",
            "details": {
              "message": "Code structure analysis suggests potential readability issues.",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "codeRhythm",
                  "operator": "codeRhythmComplexity",
                  "value": {
                    "consistency": 0.6,
                    "complexity": 0.7,
                    "readability": 0.5
                  },
                  "params": {
                    "resultFact": "codeRhythmResult"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/AnotherLegacyComponent.tsx",
              "fileName": "AnotherLegacyComponent.tsx",
              "details": {
                "consistency": 0.4,
                "complexity": 0.3,
                "readability": 0.7
              }
            }
          }
        ]
      },
      {
        "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/ComplexComponent.tsx",
        "errors": [
          {
            "ruleFailure": "functionComplexity-iterative",
            "level": "warning",
            "details": {
              "message": "Functions detected with high complexity. Consider refactoring.",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "functionComplexity",
                  "operator": "astComplexity",
                  "value": {
                    "cyclomaticComplexity": 20,
                    "cognitiveComplexity": 30,
                    "nestingDepth": 10,
                    "parameterCount": 5,
                    "returnCount": 10
                  },
                  "params": {
                    "resultFact": "complexityResult",
                    "thresholds": {
                      "cyclomaticComplexity": 20,
                      "cognitiveComplexity": 30,
                      "nestingDepth": 10,
                      "parameterCount": 5,
                      "returnCount": 10
                    }
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/ComplexComponent.tsx",
              "fileName": "ComplexComponent.tsx",
              "details": {
                "complexities": [
                  {
                    "name": "anonymous",
                    "metrics": {
                      "name": "anonymous",
                      "cyclomaticComplexity": 24,
                      "cognitiveComplexity": 89,
                      "nestingDepth": 11,
                      "parameterCount": 10,
                      "returnCount": 15,
                      "lineCount": 112,
                      "location": {
                        "startLine": 22,
                        "endLine": 133,
                        "startColumn": 48,
                        "endColumn": 4
                      }
                    }
                  },
                  {
                    "name": "anonymous",
                    "metrics": {
                      "name": "anonymous",
                      "cyclomaticComplexity": 12,
                      "cognitiveComplexity": 66,
                      "nestingDepth": 10,
                      "parameterCount": 0,
                      "returnCount": 11,
                      "lineCount": 50,
                      "location": {
                        "startLine": 48,
                        "endLine": 97,
                        "startColumn": 37,
                        "endColumn": 8
                      }
                    }
                  },
                  {
                    "name": "anonymous",
                    "metrics": {
                      "name": "anonymous",
                      "cyclomaticComplexity": 13,
                      "cognitiveComplexity": 68,
                      "nestingDepth": 9,
                      "parameterCount": 5,
                      "returnCount": 4,
                      "lineCount": 41,
                      "location": {
                        "startLine": 136,
                        "endLine": 176,
                        "startColumn": 48,
                        "endColumn": 4
                      }
                    }
                  }
                ],
                "thresholds": {
                  "cyclomaticComplexity": 20,
                  "cognitiveComplexity": 30,
                  "nestingDepth": 10,
                  "parameterCount": 5,
                  "returnCount": 10
                },
                "totalFunctions": 19,
                "exceedingFunctions": 3
              }
            }
          },
          {
            "ruleFailure": "codeRhythm-iterative",
            "level": "warning",
            "details": {
              "message": "Code structure analysis suggests potential readability issues.",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "codeRhythm",
                  "operator": "codeRhythmComplexity",
                  "value": {
                    "consistency": 0.6,
                    "complexity": 0.7,
                    "readability": 0.5
                  },
                  "params": {
                    "resultFact": "codeRhythmResult"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/ComplexComponent.tsx",
              "fileName": "ComplexComponent.tsx",
              "details": {
                "consistency": 0.4,
                "complexity": 0.3,
                "readability": 0.7
              }
            }
          }
        ]
      },
      {
        "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/LegacyComponentLib.tsx",
        "errors": [
          {
            "ruleFailure": "codeRhythm-iterative",
            "level": "warning",
            "details": {
              "message": "Code structure analysis suggests potential readability issues.",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "codeRhythm",
                  "operator": "codeRhythmComplexity",
                  "value": {
                    "consistency": 0.6,
                    "complexity": 0.7,
                    "readability": 0.5
                  },
                  "params": {
                    "resultFact": "codeRhythmResult"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/LegacyComponentLib.tsx",
              "fileName": "LegacyComponentLib.tsx",
              "details": {
                "consistency": 0.4,
                "complexity": 0.3,
                "readability": 0.7
              }
            }
          }
        ]
      },
      {
        "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/LegacyUIComponent.tsx",
        "errors": [
          {
            "ruleFailure": "codeRhythm-iterative",
            "level": "warning",
            "details": {
              "message": "Code structure analysis suggests potential readability issues.",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "codeRhythm",
                  "operator": "codeRhythmComplexity",
                  "value": {
                    "consistency": 0.6,
                    "complexity": 0.7,
                    "readability": 0.5
                  },
                  "params": {
                    "resultFact": "codeRhythmResult"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/LegacyUIComponent.tsx",
              "fileName": "LegacyUIComponent.tsx",
              "details": {
                "consistency": 0.4,
                "complexity": 0.3,
                "readability": 0.7
              }
            }
          }
        ]
      },
      {
        "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/OverlyComplexProcessor.tsx",
        "errors": [
          {
            "ruleFailure": "functionComplexity-iterative",
            "level": "warning",
            "details": {
              "message": "Functions detected with high complexity. Consider refactoring.",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "functionComplexity",
                  "operator": "astComplexity",
                  "value": {
                    "cyclomaticComplexity": 20,
                    "cognitiveComplexity": 30,
                    "nestingDepth": 10,
                    "parameterCount": 5,
                    "returnCount": 10
                  },
                  "params": {
                    "resultFact": "complexityResult",
                    "thresholds": {
                      "cyclomaticComplexity": 20,
                      "cognitiveComplexity": 30,
                      "nestingDepth": 10,
                      "parameterCount": 5,
                      "returnCount": 10
                    }
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/OverlyComplexProcessor.tsx",
              "fileName": "OverlyComplexProcessor.tsx",
              "details": {
                "complexities": [
                  {
                    "name": "anonymous",
                    "metrics": {
                      "name": "anonymous",
                      "cyclomaticComplexity": 58,
                      "cognitiveComplexity": 338,
                      "nestingDepth": 16,
                      "parameterCount": 0,
                      "returnCount": 10,
                      "lineCount": 224,
                      "location": {
                        "startLine": 14,
                        "endLine": 237,
                        "startColumn": 42,
                        "endColumn": 2
                      }
                    }
                  },
                  {
                    "name": "anonymous",
                    "metrics": {
                      "name": "anonymous",
                      "cyclomaticComplexity": 44,
                      "cognitiveComplexity": 298,
                      "nestingDepth": 16,
                      "parameterCount": 9,
                      "returnCount": 3,
                      "lineCount": 151,
                      "location": {
                        "startLine": 19,
                        "endLine": 169,
                        "startColumn": 46,
                        "endColumn": 4
                      }
                    }
                  },
                  {
                    "name": "anonymous",
                    "metrics": {
                      "name": "anonymous",
                      "cyclomaticComplexity": 9,
                      "cognitiveComplexity": 31,
                      "nestingDepth": 7,
                      "parameterCount": 4,
                      "returnCount": 1,
                      "lineCount": 39,
                      "location": {
                        "startLine": 172,
                        "endLine": 210,
                        "startColumn": 35,
                        "endColumn": 4
                      }
                    }
                  }
                ],
                "thresholds": {
                  "cyclomaticComplexity": 20,
                  "cognitiveComplexity": 30,
                  "nestingDepth": 10,
                  "parameterCount": 5,
                  "returnCount": 10
                },
                "totalFunctions": 7,
                "exceedingFunctions": 3
              }
            }
          },
          {
            "ruleFailure": "codeRhythm-iterative",
            "level": "warning",
            "details": {
              "message": "Code structure analysis suggests potential readability issues.",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "codeRhythm",
                  "operator": "codeRhythmComplexity",
                  "value": {
                    "consistency": 0.6,
                    "complexity": 0.7,
                    "readability": 0.5
                  },
                  "params": {
                    "resultFact": "codeRhythmResult"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/OverlyComplexProcessor.tsx",
              "fileName": "OverlyComplexProcessor.tsx",
              "details": {
                "consistency": 0.4,
                "complexity": 0.3,
                "readability": 0.7
              }
            }
          }
        ]
      },
      {
        "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/PoorRhythmComponent.tsx",
        "errors": [
          {
            "ruleFailure": "codeRhythm-iterative",
            "level": "warning",
            "details": {
              "message": "Code structure analysis suggests potential readability issues.",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "codeRhythm",
                  "operator": "codeRhythmComplexity",
                  "value": {
                    "consistency": 0.6,
                    "complexity": 0.7,
                    "readability": 0.5
                  },
                  "params": {
                    "resultFact": "codeRhythmResult"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/PoorRhythmComponent.tsx",
              "fileName": "PoorRhythmComponent.tsx",
              "details": {
                "consistency": 0.8,
                "complexity": 0.9,
                "readability": 0.7
              }
            }
          }
        ]
      },
      {
        "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/SensitiveDataLogger.tsx",
        "errors": [
          {
            "ruleFailure": "sensitiveLogging-iterative",
            "level": "warning",
            "details": {
              "message": "Potential sensitive data detected. This must not be logged or exposed. Note: You can exclude files from this check by adding their relative paths to the 'sensitiveFileFalsePositives' array in .xfi-config.json.",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "repoFileAnalysis",
                  "operator": "fileContains",
                  "value": true,
                  "params": {
                    "checkPattern": [
                      "(api[_-]?key|auth[_-]?token|access[_-]?token|secret[_-]?key)",
                      "(aws[_-]?access[_-]?key[_-]?id|aws[_-]?secret[_-]?access[_-]?key)",
                      "(private[_-]?key|ssh[_-]?key)",
                      "(oauth[_-]?token|jwt[_-]?token)",
                      "db[_-]?password"
                    ],
                    "resultFact": "fileResults"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/SensitiveDataLogger.tsx",
              "fileName": "SensitiveDataLogger.tsx",
              "details": [
                {
                  "match": "(api[_-]?key|auth[_-]?token|access[_-]?token|secret[_-]?key)",
                  "lineNumber": 19,
                  "line": "...ole*** Pa..."
                }
              ]
            }
          },
          {
            "ruleFailure": "noDatabases-iterative",
            "level": "exempt",
            "details": {
              "message": "code must not directly call databases",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "repoFileAnalysis",
                  "operator": "fileContains",
                  "value": true,
                  "params": {
                    "checkPattern": [
                      "[\\s\\'\\\"\\.](oracle)[\\s\\'\\\"\\.]",
                      "[\\s\\'\\\"\\.](postgres)[\\s\\'\\\"\\.]",
                      "[\\s\\'\\\"\\.](mongodb)[\\s\\'\\\"\\.]"
                    ],
                    "resultFact": "fileResultsDB"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/SensitiveDataLogger.tsx",
              "fileName": "SensitiveDataLogger.tsx",
              "details": [
                {
                  "match": "[\\s\\'\\\"\\.](mongodb)[\\s\\'\\\"\\.]",
                  "lineNumber": 24,
                  "line": "...:supersecret@prod-cluster.mongodb.net'; // For noDatabases ..."
                }
              ]
            }
          }
        ]
      },
      {
        "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/UserAuth.tsx",
        "errors": [
          {
            "ruleFailure": "sensitiveLogging-iterative",
            "level": "warning",
            "details": {
              "message": "Potential sensitive data detected. This must not be logged or exposed. Note: You can exclude files from this check by adding their relative paths to the 'sensitiveFileFalsePositives' array in .xfi-config.json.",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "repoFileAnalysis",
                  "operator": "fileContains",
                  "value": true,
                  "params": {
                    "checkPattern": [
                      "(api[_-]?key|auth[_-]?token|access[_-]?token|secret[_-]?key)",
                      "(aws[_-]?access[_-]?key[_-]?id|aws[_-]?secret[_-]?access[_-]?key)",
                      "(private[_-]?key|ssh[_-]?key)",
                      "(oauth[_-]?token|jwt[_-]?token)",
                      "db[_-]?password"
                    ],
                    "resultFact": "fileResults"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/UserAuth.tsx",
              "fileName": "UserAuth.tsx",
              "details": [
                {
                  "match": "(api[_-]?key|auth[_-]?token|access[_-]?token|secret[_-]?key)",
                  "lineNumber": 19,
                  "line": "      ***ken..."
                }
              ]
            }
          },
          {
            "ruleFailure": "noDatabases-iterative",
            "level": "exempt",
            "details": {
              "message": "code must not directly call databases",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "repoFileAnalysis",
                  "operator": "fileContains",
                  "value": true,
                  "params": {
                    "checkPattern": [
                      "[\\s\\'\\\"\\.](oracle)[\\s\\'\\\"\\.]",
                      "[\\s\\'\\\"\\.](postgres)[\\s\\'\\\"\\.]",
                      "[\\s\\'\\\"\\.](mongodb)[\\s\\'\\\"\\.]"
                    ],
                    "resultFact": "fileResultsDB"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/components/UserAuth.tsx",
              "fileName": "UserAuth.tsx",
              "details": [
                {
                  "match": "[\\s\\'\\\"\\.](oracle)[\\s\\'\\\"\\.]",
                  "lineNumber": 14,
                  "line": "...ole.log('About to require oracle database package...');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](postgres)[\\s\\'\\\"\\.]",
                  "lineNumber": 15,
                  "line": "...ole.log('About to require postgres database package...');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](oracle)[\\s\\'\\\"\\.]",
                  "lineNumber": 16,
                  "line": "... mongodb database package oracle...');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](mongodb)[\\s\\'\\\"\\.]",
                  "lineNumber": 16,
                  "line": "...ole.log('About to require mongodb database package oracle....."
                },
                {
                  "match": "[\\s\\'\\\"\\.](oracle)[\\s\\'\\\"\\.]",
                  "lineNumber": 23,
                  "line": "...console.log('Initializing oracle connection...');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](postgres)[\\s\\'\\\"\\.]",
                  "lineNumber": 24,
                  "line": "...  console.log('Setting up postgres database...');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](mongodb)[\\s\\'\\\"\\.]",
                  "lineNumber": 25,
                  "line": "... console.log('Configuring mongodb instance...');"
                }
              ]
            }
          }
        ]
      },
      {
        "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/facts/anotherProblematicFact.ts",
        "errors": [
          {
            "ruleFailure": "codeRhythm-iterative",
            "level": "warning",
            "details": {
              "message": "Code structure analysis suggests potential readability issues.",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "codeRhythm",
                  "operator": "codeRhythmComplexity",
                  "value": {
                    "consistency": 0.6,
                    "complexity": 0.7,
                    "readability": 0.5
                  },
                  "params": {
                    "resultFact": "codeRhythmResult"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/facts/anotherProblematicFact.ts",
              "fileName": "anotherProblematicFact.ts",
              "details": {
                "consistency": 0.4,
                "complexity": 0.3,
                "readability": 0.7
              }
            }
          }
        ]
      },
      {
        "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/facts/manyFunctionsFact.ts",
        "errors": [
          {
            "ruleFailure": "functionCount-iterative",
            "level": "warning",
            "details": {
              "message": "File contains too many functions (>20). Consider splitting into multiple files.",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "regexMatch",
                "value": "^.*\\/facts\\/(?!.*\\.test).*\\.ts$"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "regexMatch",
                  "value": "^.*\\/facts\\/(?!.*\\.test).*\\.ts$",
                  "path": "$.filePath"
                },
                {
                  "fact": "functionCount",
                  "operator": "functionCount",
                  "value": 20,
                  "params": {
                    "resultFact": "functionCountResult"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/facts/manyFunctionsFact.ts",
              "fileName": "manyFunctionsFact.ts"
            }
          }
        ]
      },
      {
        "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/facts/massiveFunctionCollection.ts",
        "errors": [
          {
            "ruleFailure": "functionCount-iterative",
            "level": "warning",
            "details": {
              "message": "File contains too many functions (>20). Consider splitting into multiple files.",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "regexMatch",
                "value": "^.*\\/facts\\/(?!.*\\.test).*\\.ts$"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "regexMatch",
                  "value": "^.*\\/facts\\/(?!.*\\.test).*\\.ts$",
                  "path": "$.filePath"
                },
                {
                  "fact": "functionCount",
                  "operator": "functionCount",
                  "value": 20,
                  "params": {
                    "resultFact": "functionCountResult"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/facts/massiveFunctionCollection.ts",
              "fileName": "massiveFunctionCollection.ts"
            }
          }
        ]
      },
      {
        "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/utils/database.js",
        "errors": [
          {
            "ruleFailure": "sensitiveLogging-iterative",
            "level": "warning",
            "details": {
              "message": "Potential sensitive data detected. This must not be logged or exposed. Note: You can exclude files from this check by adding their relative paths to the 'sensitiveFileFalsePositives' array in .xfi-config.json.",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "repoFileAnalysis",
                  "operator": "fileContains",
                  "value": true,
                  "params": {
                    "checkPattern": [
                      "(api[_-]?key|auth[_-]?token|access[_-]?token|secret[_-]?key)",
                      "(aws[_-]?access[_-]?key[_-]?id|aws[_-]?secret[_-]?access[_-]?key)",
                      "(private[_-]?key|ssh[_-]?key)",
                      "(oauth[_-]?token|jwt[_-]?token)",
                      "db[_-]?password"
                    ],
                    "resultFact": "fileResults"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/utils/database.js",
              "fileName": "database.js",
              "details": [
                {
                  "match": "(api[_-]?key|auth[_-]?token|access[_-]?token|secret[_-]?key)",
                  "lineNumber": 7,
                  "line": "      ***024', "
                },
                {
                  "match": "(api[_-]?key|auth[_-]?token|access[_-]?token|secret[_-]?key)",
                  "lineNumber": 50,
                  "line": "...    console.log('MongoDB secret_key:', this.config.keyValue)..."
                },
                {
                  "match": "db[_-]?password",
                  "lineNumber": 51,
                  "line": "      ***Pat..."
                }
              ]
            }
          },
          {
            "ruleFailure": "noDatabases-iterative",
            "level": "exempt",
            "details": {
              "message": "code must not directly call databases",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "repoFileAnalysis",
                  "operator": "fileContains",
                  "value": true,
                  "params": {
                    "checkPattern": [
                      "[\\s\\'\\\"\\.](oracle)[\\s\\'\\\"\\.]",
                      "[\\s\\'\\\"\\.](postgres)[\\s\\'\\\"\\.]",
                      "[\\s\\'\\\"\\.](mongodb)[\\s\\'\\\"\\.]"
                    ],
                    "resultFact": "fileResultsDB"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/utils/database.js",
              "fileName": "database.js",
              "details": [
                {
                  "match": "[\\s\\'\\\"\\.](oracle)[\\s\\'\\\"\\.]",
                  "lineNumber": 15,
                  "line": "      const oracle = require('oracle');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](oracle)[\\s\\'\\\"\\.]",
                  "lineNumber": 15,
                  "line": "      const oracle = require('oracle');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](oracle)[\\s\\'\\\"\\.]",
                  "lineNumber": 17,
                  "line": "... const connection = await oracle.createConnection({"
                },
                {
                  "match": "[\\s\\'\\\"\\.](postgres)[\\s\\'\\\"\\.]",
                  "lineNumber": 31,
                  "line": "...  console.log('Setting up postgres connection...');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](postgres)[\\s\\'\\\"\\.]",
                  "lineNumber": 34,
                  "line": "      const postgres = require('postgres');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](postgres)[\\s\\'\\\"\\.]",
                  "lineNumber": 34,
                  "line": "      const postgres = require('postgres');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](mongodb)[\\s\\'\\\"\\.]",
                  "lineNumber": 43,
                  "line": "...console.log('Initializing mongodb connection...');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](mongodb)[\\s\\'\\\"\\.]",
                  "lineNumber": 46,
                  "line": "      const mongodb = require('mongodb');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](mongodb)[\\s\\'\\\"\\.]",
                  "lineNumber": 46,
                  "line": "      const mongodb = require('mongodb');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](mongodb)[\\s\\'\\\"\\.]",
                  "lineNumber": 47,
                  "line": "      const client = new mongodb.MongoClient('mongodb://lo..."
                }
              ]
            }
          },
          {
            "ruleFailure": "codeRhythm-iterative",
            "level": "warning",
            "details": {
              "message": "Code structure analysis suggests potential readability issues.",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "codeRhythm",
                  "operator": "codeRhythmComplexity",
                  "value": {
                    "consistency": 0.6,
                    "complexity": 0.7,
                    "readability": 0.5
                  },
                  "params": {
                    "resultFact": "codeRhythmResult"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/utils/database.js",
              "fileName": "database.js",
              "details": {
                "consistency": 0.4,
                "complexity": 0.3,
                "readability": 0.7
              }
            }
          }
        ]
      },
      {
        "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/utils/directDatabaseCalls.ts",
        "errors": [
          {
            "ruleFailure": "noDatabases-iterative",
            "level": "exempt",
            "details": {
              "message": "code must not directly call databases",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "repoFileAnalysis",
                  "operator": "fileContains",
                  "value": true,
                  "params": {
                    "checkPattern": [
                      "[\\s\\'\\\"\\.](oracle)[\\s\\'\\\"\\.]",
                      "[\\s\\'\\\"\\.](postgres)[\\s\\'\\\"\\.]",
                      "[\\s\\'\\\"\\.](mongodb)[\\s\\'\\\"\\.]"
                    ],
                    "resultFact": "fileResultsDB"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/utils/directDatabaseCalls.ts",
              "fileName": "directDatabaseCalls.ts",
              "details": [
                {
                  "match": "[\\s\\'\\\"\\.](oracle)[\\s\\'\\\"\\.]",
                  "lineNumber": 8,
                  "line": "const oracleDB = require('oracle');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](postgres)[\\s\\'\\\"\\.]",
                  "lineNumber": 9,
                  "line": "const postgresClient = require('postgres');  "
                },
                {
                  "match": "[\\s\\'\\\"\\.](mongodb)[\\s\\'\\\"\\.]",
                  "lineNumber": 10,
                  "line": "const mongoClient = require('mongodb');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](postgres)[\\s\\'\\\"\\.]",
                  "lineNumber": 39,
                  "line": "    const postgres = require('postgres');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](postgres)[\\s\\'\\\"\\.]",
                  "lineNumber": 39,
                  "line": "    const postgres = require('postgres');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](postgres)[\\s\\'\\\"\\.]",
                  "lineNumber": 44,
                  "line": "      username: 'postgres',"
                },
                {
                  "match": "[\\s\\'\\\"\\.](mongodb)[\\s\\'\\\"\\.]",
                  "lineNumber": 58,
                  "line": "    const mongodb = require('mongodb');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](mongodb)[\\s\\'\\\"\\.]",
                  "lineNumber": 58,
                  "line": "    const mongodb = require('mongodb');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](mongodb)[\\s\\'\\\"\\.]",
                  "lineNumber": 59,
                  "line": "    const client = new mongodb.MongoClient(process.env.M..."
                },
                {
                  "match": "[\\s\\'\\\"\\.](oracle)[\\s\\'\\\"\\.]",
                  "lineNumber": 91,
                  "line": "  const oracle = require('oracle');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](oracle)[\\s\\'\\\"\\.]",
                  "lineNumber": 91,
                  "line": "  const oracle = require('oracle');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](oracle)[\\s\\'\\\"\\.]",
                  "lineNumber": 92,
                  "line": "  return oracle.createConnection();"
                },
                {
                  "match": "[\\s\\'\\\"\\.](postgres)[\\s\\'\\\"\\.]",
                  "lineNumber": 96,
                  "line": "  const postgres = require('postgres');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](postgres)[\\s\\'\\\"\\.]",
                  "lineNumber": 96,
                  "line": "  const postgres = require('postgres');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](mongodb)[\\s\\'\\\"\\.]",
                  "lineNumber": 101,
                  "line": "  const mongodb = require('mongodb');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](mongodb)[\\s\\'\\\"\\.]",
                  "lineNumber": 101,
                  "line": "  const mongodb = require('mongodb');"
                },
                {
                  "match": "[\\s\\'\\\"\\.](mongodb)[\\s\\'\\\"\\.]",
                  "lineNumber": 102,
                  "line": "  return new mongodb.MongoClient('mongodb://lo..."
                }
              ]
            }
          },
          {
            "ruleFailure": "codeRhythm-iterative",
            "level": "warning",
            "details": {
              "message": "Code structure analysis suggests potential readability issues.",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "codeRhythm",
                  "operator": "codeRhythmComplexity",
                  "value": {
                    "consistency": 0.6,
                    "complexity": 0.7,
                    "readability": 0.5
                  },
                  "params": {
                    "resultFact": "codeRhythmResult"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/utils/directDatabaseCalls.ts",
              "fileName": "directDatabaseCalls.ts",
              "details": {
                "consistency": 0.4,
                "complexity": 0.3,
                "readability": 0.7
              }
            }
          }
        ]
      },
      {
        "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/utils/minimalSdkUsage.ts",
        "errors": [
          {
            "ruleFailure": "codeRhythm-iterative",
            "level": "warning",
            "details": {
              "message": "Code structure analysis suggests potential readability issues.",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "codeRhythm",
                  "operator": "codeRhythmComplexity",
                  "value": {
                    "consistency": 0.6,
                    "complexity": 0.7,
                    "readability": 0.5
                  },
                  "params": {
                    "resultFact": "codeRhythmResult"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/utils/minimalSdkUsage.ts",
              "fileName": "minimalSdkUsage.ts",
              "details": {
                "consistency": 0.4,
                "complexity": 0.3,
                "readability": 0.7
              }
            }
          }
        ]
      },
      {
        "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/utils/sdkUsage.ts",
        "errors": [
          {
            "ruleFailure": "codeRhythm-iterative",
            "level": "warning",
            "details": {
              "message": "Code structure analysis suggests potential readability issues.",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "notEqual",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "notEqual",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "codeRhythm",
                  "operator": "codeRhythmComplexity",
                  "value": {
                    "consistency": 0.6,
                    "complexity": 0.7,
                    "readability": 0.5
                  },
                  "params": {
                    "resultFact": "codeRhythmResult"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/utils/sdkUsage.ts",
              "fileName": "sdkUsage.ts",
              "details": {
                "consistency": 0.4,
                "complexity": 0.3,
                "readability": 0.7
              }
            }
          }
        ]
      },
      {
        "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/xfiTestMatch.json",
        "errors": [
          {
            "ruleFailure": "invalidSystemIdConfigured-iterative",
            "level": "fatality",
            "details": {
              "message": "One or more of the extracted strings failed remote validation.",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "equal",
                "value": "xfiTestMatch.json"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "equal",
                  "value": "xfiTestMatch.json",
                  "path": "$.fileName"
                },
                {
                  "fact": "remoteSubstringValidation",
                  "operator": "invalidRemoteValidation",
                  "value": true,
                  "params": {
                    "pattern": "\"systemId\":[\\s]*\"([a-zA-Z0-9]*)\"",
                    "flags": "gi",
                    "validationParams": {
                      "url": "http://localhost:4200/systemIdValidator",
                      "method": "POST",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "body": {
                        "systemId": "#MATCH#"
                      },
                      "checkJsonPath": "$.validSystems[?(@.id == '#MATCH#')]"
                    },
                    "resultFact": "remoteCheckResultFact"
                  }
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack/src/xfiTestMatch.json",
              "fileName": "xfiTestMatch.json"
            }
          }
        ]
      },
      {
        "filePath": "REPO_GLOBAL_CHECK",
        "errors": [
          {
            "ruleFailure": "outdatedFramework-global",
            "level": "fatality",
            "details": {
              "message": "Core framework dependencies do not meet minimum version requirements! Please update your dependencies to the required versions.",
              "conditionDetails": {
                "fact": "fileData",
                "operator": "equal",
                "value": "REPO_GLOBAL_CHECK"
              },
              "allConditions": [
                {
                  "fact": "fileData",
                  "operator": "equal",
                  "value": "REPO_GLOBAL_CHECK",
                  "path": "$.fileName"
                },
                {
                  "fact": "repoDependencyAnalysis",
                  "operator": "outdatedFramework",
                  "value": true
                }
              ],
              "conditionType": "all",
              "ruleDescription": "No description available",
              "filePath": "REPO_GLOBAL_CHECK",
              "fileName": "REPO_GLOBAL_CHECK",
              "details": [
                {
                  "dependency": "@types/react",
                  "currentVersion": "17.0.0",
                  "requiredVersion": ">=18.0.0"
                },
                {
                  "dependency": "react",
                  "currentVersion": "16.14.0",
                  "requiredVersion": "18.2.0"
                },
                {
                  "dependency": "commander",
                  "currentVersion": "1.0.0",
                  "requiredVersion": ">=2.0.0 <13.0.0"
                },
                {
                  "dependency": "nodemon",
                  "currentVersion": "3.1.10",
                  "requiredVersion": ">4.9.0"
                },
                {
                  "dependency": "@colors/colors",
                  "currentVersion": "1.5.0",
                  "requiredVersion": "1.7.0 || 1.6.0"
                },
                {
                  "dependency": "typescript",
                  "currentVersion": "5.7.3",
                  "requiredVersion": "5.0.0"
                },
                {
                  "dependency": "next",
                  "currentVersion": "15.3.4",
                  "requiredVersion": "13.0.0"
                }
              ]
            }
          }
        ]
      }
    ],
    "telemetryData": {
      "repoUrl": "git@github.com:zotoio/x-fidelity.git",
      "configServer": "none",
      "hostInfo": {
        "platform": "linux",
        "release": "6.14.0-24-generic",
        "type": "Linux",
        "arch": "x64",
        "cpus": 12,
        "totalMemory": 33271963648,
        "freeMemory": 14509977600
      },
      "userInfo": {
        "username": "andrewv",
        "homedir": "/home/andrewv",
        "shell": "/bin/bash"
      },
      "startTime": 1753262146311
    },
    "memoryUsage": {
      "heapTotal": 82456576,
      "heapUsed": 56218640,
      "external": 3583832,
      "rss": 144556032
    },
    "factMetrics": {
      "repoDependencyVersions": {
        "executionCount": 1,
        "totalExecutionTime": 0.0002,
        "longestExecutionTime": 0.0002,
        "averageExecutionTime": 0.0002
      },
      "repoDependencyAnalysis": {
        "executionCount": 1,
        "totalExecutionTime": 0.0065,
        "longestExecutionTime": 0.0065,
        "averageExecutionTime": 0.0065
      },
      "repoFilesystemFacts": {
        "executionCount": 1,
        "totalExecutionTime": 0.2032,
        "longestExecutionTime": 0.2032,
        "averageExecutionTime": 0.2032
      },
      "missingRequiredFiles": {
        "executionCount": 1,
        "totalExecutionTime": 0.0091,
        "longestExecutionTime": 0.0091,
        "averageExecutionTime": 0.0091
      },
      "remoteSubstringValidation": {
        "executionCount": 24,
        "totalExecutionTime": 0.0309,
        "longestExecutionTime": 0.0086,
        "averageExecutionTime": 0.0013
      },
      "customFact": {
        "executionCount": 24,
        "totalExecutionTime": 0.0289,
        "longestExecutionTime": 0.0077,
        "averageExecutionTime": 0.0012
      },
      "globalFileAnalysis": {
        "executionCount": 48,
        "totalExecutionTime": 0.0619,
        "longestExecutionTime": 0.0094,
        "averageExecutionTime": 0.0013
      },
      "repoFileAnalysis": {
        "executionCount": 72,
        "totalExecutionTime": 0.125,
        "longestExecutionTime": 0.0104,
        "averageExecutionTime": 0.0017
      }
    },
    "options": {
      "localConfigPath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-cli/dist/demoConfig",
      "jsonTTL": "10",
      "archetype": "node-fullstack",
      "mode": "cli",
      "dir": "../x-fidelity-fixtures/node-fullstack",
      "extraPlugins": [],
      "port": 8888,
      "openaiEnabled": false,
      "logLevel": "info",
      "telemetryEnabled": true,
      "maxFileSize": 1048576,
      "timeout": 60000,
      "enableTreeSitterWorker": false,
      "fileCacheTTL": 60,
      "enableTreeSitterWasm": false,
      "wasmTimeout": 60000
    },
    "startTime": 1753262146311,
    "finishTime": 1753262151838,
    "durationSeconds": 5.527,
    "xfiVersion": "0.0.0-semantically-released",
    "archetype": "node-fullstack",
    "fileCount": 23,
    "totalIssues": 26,
    "warningCount": 19,
    "errorCount": 0,
    "fatalityCount": 2,
    "exemptCount": 5,
    "repoPath": "/home/andrewv/git/cursor/x-fidelity/packages/x-fidelity-fixtures/node-fullstack",
    "repoUrl": "git@github.com:zotoio/x-fidelity.git"
  }
}